{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppSyncEvent } from '../utils/customTypes';\r\nimport { NotificationModel } from './utils/notificationSchema';\r\nimport { sendNotification } from './utils/sendNotification';\r\nimport { DB } from '../utils/DB';\r\nimport { getCurrentUser } from '../utils/authentication';\r\n\r\nconst notificationPopulate = [\r\n  {\r\n    path: 'userId',\r\n    select: '_id userId name picture',\r\n  },\r\n];\r\n\r\nexport const handler = async (event: AppSyncEvent): Promise<any> => {\r\n  const {\r\n    info: { fieldName },\r\n    identity,\r\n  } = event;\r\n  const args = { ...event.arguments };\r\n  await DB();\r\n  const user = await getCurrentUser(identity);\r\n\r\n  switch (fieldName) {\r\n    case 'sendNotification': {\r\n      return await args;\r\n    }\r\n    case 'callNotification': {\r\n      const payload = { ...args, userId: [`${args.userId}`] };\r\n      await sendNotification(payload);\r\n      return args;\r\n    }\r\n    case 'getMyNotifications': {\r\n      const data = await NotificationModel.find({\r\n        userId: user._id,\r\n        isClicked: false,\r\n        threadId: args.threadId,\r\n      })\r\n        .sort({ createdAt: -1 })\r\n        .populate(notificationPopulate);\r\n      const count = await NotificationModel.countDocuments({\r\n        userId: user._id,\r\n        threadId: args.threadId,\r\n        isClicked: false,\r\n      });\r\n      return {\r\n        data,\r\n        count,\r\n      };\r\n    }\r\n    case 'getNotificationList': {\r\n      const data = await NotificationModel.aggregate([\r\n        {\r\n          $match: {\r\n            userId: user._id,\r\n            isClicked: false,\r\n          },\r\n        },\r\n        {\r\n          $sort: {\r\n            createdAt: -1,\r\n          },\r\n        },\r\n        {\r\n          $group: {\r\n            _id: '$threadId',\r\n            lastNotification: {\r\n              $first: '$$ROOT',\r\n            },\r\n            notificationCount: { $sum: 1 },\r\n          },\r\n        },\r\n        {\r\n          $sort: {\r\n            'lastNotification.updatedAt': -1,\r\n          },\r\n        },\r\n      ]);\r\n      return data;\r\n    }\r\n\r\n    case 'setIsClicked': {\r\n      try {\r\n        const update = await NotificationModel.findByIdAndUpdate(\r\n          args._id,\r\n          { isClicked: true },\r\n          { new: true, runValidators: true },\r\n        );\r\n        return true;\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n      return false;\r\n    }\r\n    default:\r\n      throw new Error('Something went wrong! Please check your Query or Mutation');\r\n  }\r\n};\r\n"]}