{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import slugify from 'slugify';\r\nimport { DB } from '../utils/DB';\r\nimport Template, { templatePopulate } from './utils/templateModel';\r\nimport Page, { pagePopulate } from './utils/pageModel';\r\nimport { getCurrentUser } from '../utils/authentication';\r\nimport { AppSyncEvent } from '../utils/customTypes';\r\n// import getAdminFilter from '../utils/adminFilter';\r\nimport { User } from '../user/utils/userModel';\r\nimport { runInTransaction } from '../utils/runInTransaction';\r\n\r\nexport const handler = async (event: AppSyncEvent): Promise<any> => {\r\n  try {\r\n    await DB();\r\n    const { fieldName } = event.info;\r\n    const { identity } = event;\r\n    // debugger;\r\n    const user = await getCurrentUser(identity);\r\n    let args = { ...event.arguments };\r\n\r\n    if (fieldName.toLocaleLowerCase().includes('create') && user && user._id) {\r\n      args = { ...args, createdBy: user._id };\r\n    } else if (fieldName.toLocaleLowerCase().includes('update') && user && user._id) {\r\n      args = { ...args, updatedBy: user._id };\r\n    }\r\n\r\n    if (\r\n      (fieldName.toLocaleLowerCase().includes('create') ||\r\n        fieldName.toLocaleLowerCase().includes('update')) &&\r\n      Object.prototype.hasOwnProperty.call(args, 'title')\r\n    ) {\r\n      args = { ...args, slug: slugify(args.title, { lower: true }) };\r\n    } else if (\r\n      (fieldName.toLocaleLowerCase().includes('create') ||\r\n        fieldName.toLocaleLowerCase().includes('update')) &&\r\n      Object.prototype.hasOwnProperty.call(args, 'slug')\r\n    ) {\r\n      args = { ...args, slug: slugify(args.slug, { lower: true }) };\r\n    }\r\n\r\n    switch (fieldName) {\r\n      case 'getTemplates': {\r\n        const { page = 1, limit = 20, search = '', active = null } = args;\r\n        const tempFilter: any = {};\r\n        if (active !== null) {\r\n          tempFilter.active = active;\r\n        }\r\n        const data = await Template.find({\r\n          ...tempFilter,\r\n          title: { $regex: search, $options: 'i' },\r\n        })\r\n          .populate(templatePopulate)\r\n          .limit(limit * 1)\r\n          .skip((page - 1) * limit);\r\n        const count = await Template.countDocuments({\r\n          ...tempFilter,\r\n          title: { $regex: search, $options: 'i' },\r\n        });\r\n        return {\r\n          data,\r\n          count,\r\n        };\r\n      }\r\n      case 'getMenuTemplates': {\r\n        return await Template.find({\r\n          showInMenu: true,\r\n          active: true,\r\n        }).select('title slug');\r\n      }\r\n      case 'getMentionItems': {\r\n        const { search = '' } = args;\r\n        let pages: any = await Page.find({\r\n          $or: [\r\n            { title: { $regex: search, $options: 'i' } },\r\n            { description: { $regex: search, $options: 'i' } },\r\n          ],\r\n        })\r\n          .populate(pagePopulate)\r\n          .limit(5);\r\n\r\n        pages = pages.map(\r\n          (val) =>\r\n            (val = {\r\n              title: val.title,\r\n              _id: val._id,\r\n              category: val.template[0].title,\r\n              type: 'page',\r\n            }),\r\n        );\r\n\r\n        let users: any = await User.find({\r\n          $or: [\r\n            { name: { $regex: search, $options: 'i' } },\r\n            { email: { $regex: search, $options: 'i' } },\r\n          ],\r\n        }).limit(5);\r\n\r\n        users = users.map(\r\n          (val) => (val = { title: val.name, _id: val._id, category: val.email, type: 'user' }),\r\n        );\r\n        const combinedItems = pages.concat(users);\r\n        return combinedItems;\r\n      }\r\n      case 'getPageMentions': {\r\n        const { page = 1, _id, limit = 20, parentId, field, onlyShowByUser = null } = args;\r\n        const tempFilter: any = {};\r\n        if (onlyShowByUser) {\r\n          tempFilter.createdBy = user._id;\r\n        }\r\n        const data = await Page.find({\r\n          'fields.options.values.value': { $regex: `data-id=\"${_id}\"`, $options: 'i' },\r\n        })\r\n          .populate(pagePopulate)\r\n          .limit(limit * 1)\r\n          .skip((page - 1) * limit);\r\n        const count = await Page.countDocuments({\r\n          ...tempFilter,\r\n          parentId,\r\n          field,\r\n        });\r\n        return {\r\n          data,\r\n          count,\r\n        };\r\n      }\r\n      case 'getTemplateBySlug': {\r\n        return await Template.findOne({ slug: args.slug }).populate(templatePopulate);\r\n      }\r\n      case 'getTemplate': {\r\n        return await Template.findById(args._id).populate(templatePopulate);\r\n      }\r\n      case 'createTemplate': {\r\n        let count = 1;\r\n        args = { ...args, count };\r\n        const lastTemplate = await Template.findOne().sort('-count');\r\n        if (lastTemplate) {\r\n          count = lastTemplate?.count + 1;\r\n          args = { ...args, count };\r\n        }\r\n        return await runInTransaction({\r\n          action: 'CREATE',\r\n          Model: Template,\r\n          args,\r\n          populate: templatePopulate,\r\n          user,\r\n        });\r\n      }\r\n      case 'updateTemplate': {\r\n        return await runInTransaction({\r\n          action: 'UPDATE',\r\n          Model: Template,\r\n          args,\r\n          populate: templatePopulate,\r\n          user,\r\n        });\r\n      }\r\n      case 'deleteTemplate': {\r\n        await runInTransaction({\r\n          action: 'DELETE',\r\n          Model: Template,\r\n          args,\r\n          populate: templatePopulate,\r\n          user,\r\n        });\r\n        return args?._id;\r\n      }\r\n      case 'getPages': {\r\n        const { page = 1, limit = 20, search = '', active = null, template = null } = args;\r\n        const tempFilter: any = {};\r\n        if (active !== null) {\r\n          tempFilter.active = active;\r\n        }\r\n        if (template) {\r\n          tempFilter.template = template;\r\n        }\r\n        // const adminFilter = getAdminFilter(identity, user);\r\n        const data = await Page.find({\r\n          ...tempFilter,\r\n          // ...adminFilter,\r\n          $or: [\r\n            { title: { $regex: search, $options: 'i' } },\r\n            { description: { $regex: search, $options: 'i' } },\r\n          ],\r\n        })\r\n          .populate(pagePopulate)\r\n          .limit(limit * 1)\r\n          .skip((page - 1) * limit);\r\n        const count = await Page.countDocuments({\r\n          ...tempFilter,\r\n          // ...adminFilter,\r\n          $or: [\r\n            { title: { $regex: search, $options: 'i' } },\r\n            { description: { $regex: search, $options: 'i' } },\r\n          ],\r\n        });\r\n        return {\r\n          data,\r\n          count,\r\n        };\r\n      }\r\n      case 'getPageBySlug': {\r\n        return await Page.findOne({ slug: args.slug }).populate(pagePopulate);\r\n      }\r\n      case 'getPage': {\r\n        return await Page.findById(args._id).populate(pagePopulate);\r\n      }\r\n      case 'createPage': {\r\n        const page = await Page.create(args);\r\n        return await page.populate(pagePopulate); //.execPopulate();\r\n      }\r\n      case 'updatePage': {\r\n        const page: any = await Page.findByIdAndUpdate(args._id, args, {\r\n          new: true,\r\n          runValidators: true,\r\n        });\r\n        return await page.populate(pagePopulate); //.execPopulate();\r\n      }\r\n      case 'deletePage': {\r\n        await Page.findByIdAndDelete(args._id);\r\n        return args._id;\r\n      }\r\n      default:\r\n        throw new Error('Something went wrong! Please check your Query or Mutation');\r\n    }\r\n  } catch (error) {\r\n    const error2 = error;\r\n    throw error2;\r\n  }\r\n};\r\n"]}