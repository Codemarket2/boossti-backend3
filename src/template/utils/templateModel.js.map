{"version":3,"file":"templateModel.js","sourceRoot":"","sources":["templateModel.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AAEzC,0DAAyE;AACzE,mDAAoD;AACpD,2DAAwD;AAgBxD,MAAM,cAAc,GAAG,IAAA,2BAAY,EAAC;IAClC,KAAK,EAAE,MAAM;IACb,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;IACpD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;IACrD,WAAW,EAAE,MAAM;IACnB,KAAK,EAAE;QACL,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;QACxC,OAAO,EAAE,EAAE;KACZ;IACD,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,uBAAW,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC5C,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,IAAI;KACd;IACD,KAAK,EAAE;QACL,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,UAAU,EAAE;QACV,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,OAAO,EAAE;QACP,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK;QACxB,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;KAC3B;CACF,CAAC,CAAC;AAEH,MAAM,QAAQ,GAAG,IAAA,gBAAK,EAAY,UAAU,EAAE,cAAc,CAAC,CAAC;AAEjD,QAAA,gBAAgB,GAAG,CAAC,uBAAY,EAAE,GAAG,0BAAc,CAAC,CAAC;AAElE,kBAAe,QAAQ,CAAC","sourcesContent":["import { Schema, model } from 'mongoose';\r\nimport { ISchema, IMedia } from '../../utils/customTypes';\r\nimport { fieldSchema, fieldsPopulate } from '../../form/utils/formModel';\r\nimport { userPopulate } from '../../utils/populate';\r\nimport { extendSchema } from '../../utils/extendSchema';\r\nimport { IField } from '../../form/types/form';\r\n\r\nexport interface ITemplate extends ISchema {\r\n  title: string;\r\n  slug: string;\r\n  description: string;\r\n  media: IMedia[];\r\n  active: boolean;\r\n  inUse: boolean;\r\n  showInMenu: boolean;\r\n  count: number;\r\n  fields: IField[];\r\n  options: any;\r\n}\r\n\r\nconst templateSchema = extendSchema({\r\n  title: String,\r\n  slug: { type: String, unique: true, required: true },\r\n  count: { type: Number, unique: true, required: true },\r\n  description: String,\r\n  media: {\r\n    type: [{ url: String, caption: String }],\r\n    default: [],\r\n  },\r\n  fields: { type: [fieldSchema], default: [] },\r\n  active: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  inUse: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  showInMenu: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  options: {\r\n    type: Schema.Types.Mixed,\r\n    default: { option: false },\r\n  },\r\n});\r\n\r\nconst Template = model<ITemplate>('Template', templateSchema);\r\n\r\nexport const templatePopulate = [userPopulate, ...fieldsPopulate];\r\n\r\nexport default Template;\r\n"]}