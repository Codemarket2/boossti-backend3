{"version":3,"file":"pageModel.js","sourceRoot":"","sources":["pageModel.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AAEzC,0DAAyE;AACzE,kEAA6E;AAC7E,mDAAoD;AAiBpD,MAAM,UAAU,GAAG,IAAI,iBAAM,CAC3B;IACE,QAAQ,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,UAAU,EAAE;IAC1D,KAAK,EAAE,MAAM;IACb,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;IACpD,WAAW,EAAE,MAAM;IACnB,KAAK,EAAE;QACL,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;QACxC,OAAO,EAAE,EAAE;KACZ;IACD,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,uBAAW,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC5C,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,2BAAW,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC5C,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,gBAAgB,EAAE;QAChB,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,OAAO,EAAE;QACP,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK;QACxB,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;KAC3B;IACD,SAAS,EAAE;QACT,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;IACD,SAAS,EAAE;QACT,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,MAAM,IAAI,GAAG,IAAA,gBAAK,EAAQ,MAAM,EAAE,UAAU,CAAC,CAAC;AAE9C,kBAAe,IAAI,CAAC;AAEP,QAAA,YAAY,GAAG;IAC1B,uBAAY;IACZ,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE;IAC1C,GAAG,0BAAc;IACjB,GAAG,8BAAc;CAClB,CAAC","sourcesContent":["import { Schema, model } from 'mongoose';\r\nimport { ISchema, IMedia } from '../../utils/customTypes';\r\nimport { fieldSchema, fieldsPopulate } from '../../form/utils/formModel';\r\nimport { valueSchema, valuesPopulate } from '../../form/utils/responseModel';\r\nimport { userPopulate } from '../../utils/populate';\r\nimport { IField } from '../../form/types/form';\r\nimport { IValue } from '../../form/types/response';\r\n\r\nexport interface IPage extends ISchema {\r\n  template: Schema.Types.ObjectId;\r\n  title: string;\r\n  slug: string;\r\n  description: string;\r\n  media: IMedia[];\r\n  fields: IField[];\r\n  active: boolean;\r\n  values: IValue[];\r\n  authenticateUser: boolean;\r\n  options: any;\r\n}\r\n\r\nconst pageSchema = new Schema<IPage>(\r\n  {\r\n    template: { type: Schema.Types.ObjectId, ref: 'Template' },\r\n    title: String,\r\n    slug: { type: String, unique: true, required: true },\r\n    description: String,\r\n    media: {\r\n      type: [{ url: String, caption: String }],\r\n      default: [],\r\n    },\r\n    fields: { type: [fieldSchema], default: [] },\r\n    values: { type: [valueSchema], default: [] },\r\n    active: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    authenticateUser: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    options: {\r\n      type: Schema.Types.Mixed,\r\n      default: { option: false },\r\n    },\r\n    createdBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n    },\r\n    updatedBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n    },\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\nconst Page = model<IPage>('Page', pageSchema);\r\n\r\nexport default Page;\r\n\r\nexport const pagePopulate = [\r\n  userPopulate,\r\n  { path: 'template', select: 'title slug' },\r\n  ...fieldsPopulate,\r\n  ...valuesPopulate,\r\n];\r\n"]}