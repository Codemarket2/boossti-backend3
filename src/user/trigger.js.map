{"version":3,"file":"trigger.js","sourceRoot":"","sources":["trigger.ts"],"names":[],"mappings":";;;AAKA,6DAIiC;AAE1B,MAAM,OAAO,GAAG,KAAK,EAC1B,KAA4F,EAC9E,EAAE;IAChB,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC;QACxB,IAAI,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;YAC/C,OAAO,MAAM,IAAA,kCAAgB,EAAC,KAAK,CAAC,CAAC;QACvC,CAAC;aAAM,IAAI,KAAK,CAAC,aAAa,KAAK,mCAAmC,EAAE,CAAC;YACvE,OAAO,MAAM,IAAA,2CAAyB,EAAC,KAAuC,CAAC,CAAC;QAClF,CAAC;QACD,uEAAuE;QACvE,uDAAuD;QACvD,IAAI;IACN,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAfW,QAAA,OAAO,WAelB","sourcesContent":["import {\r\n  PreSignUpTriggerEvent,\r\n  PostAuthenticationTriggerEvent,\r\n  PostConfirmationTriggerEvent,\r\n} from 'aws-lambda';\r\nimport {\r\n  preSignUpTrigger,\r\n  postAuthenticationTrigger,\r\n  postConfirmationSignupTrigger,\r\n} from './utils/cognitoTriggers';\r\n\r\nexport const handler = async (\r\n  event: PreSignUpTriggerEvent | PostConfirmationTriggerEvent | PostAuthenticationTriggerEvent,\r\n): Promise<any> => {\r\n  if (event.triggerSource) {\r\n    if (event.triggerSource.includes('PreSignUp_')) {\r\n      return await preSignUpTrigger(event);\r\n    } else if (event.triggerSource === 'PostAuthentication_Authentication') {\r\n      return await postAuthenticationTrigger(event as PostAuthenticationTriggerEvent);\r\n    }\r\n    // else if (event.triggerSource === 'PostConfirmation_ConfirmSignUp') {\r\n    //   return await postConfirmationSignupTrigger(event);\r\n    // }\r\n  }\r\n\r\n  return event;\r\n};\r\n"]}