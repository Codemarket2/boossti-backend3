{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-case-declarations */\r\nimport { DB } from '../utils/DB';\r\nimport { User } from './utils/userModel';\r\nimport { adminToggleUserStatus } from './utils/helper';\r\nimport { AppSyncEvent } from '../utils/customTypes';\r\nimport { getCurrentUser } from '../utils/authentication';\r\n\r\nexport const handler = async (event: AppSyncEvent): Promise<any> => {\r\n  try {\r\n    await DB();\r\n    const { fieldName } = event.info;\r\n    const { arguments: args, identity } = event;\r\n    const tempFilter: any = {};\r\n    let tempSubscription = {};\r\n    let users: any = [];\r\n    let count = 0;\r\n\r\n    const authUser = await getCurrentUser(identity);\r\n\r\n    switch (fieldName) {\r\n      case 'getUsers':\r\n        const {\r\n          page = 1,\r\n          limit = 10,\r\n          search = '',\r\n          lowerRange = null,\r\n          higherRange = null,\r\n          sortBy = '-createdAtDate',\r\n          active = null,\r\n        } = args;\r\n\r\n        if (active !== null) {\r\n          tempFilter.active = active;\r\n        }\r\n\r\n        if (lowerRange !== null && higherRange !== null) {\r\n          tempFilter.createdAt = {\r\n            $gte: lowerRange,\r\n            $lte: higherRange,\r\n          };\r\n        }\r\n\r\n        users = await User.find({\r\n          ...tempFilter,\r\n          $or: [\r\n            {\r\n              email: { $regex: search, $options: 'i' },\r\n            },\r\n            {\r\n              name: { $regex: search, $options: 'i' },\r\n            },\r\n          ],\r\n        })\r\n          .limit(limit * 1)\r\n          .skip((page - 1) * limit)\r\n          .sort(sortBy)\r\n          .exec();\r\n\r\n        count = await User.countDocuments({\r\n          ...tempFilter,\r\n          $or: [\r\n            {\r\n              email: { $regex: search, $options: 'i' },\r\n            },\r\n            {\r\n              name: { $regex: search, $options: 'i' },\r\n            },\r\n          ],\r\n        });\r\n\r\n        return {\r\n          users,\r\n          count,\r\n        };\r\n      case 'getUser':\r\n        return await User.findById(args._id);\r\n      case 'getUserByCognitoUserId':\r\n        return await User.findOne({\r\n          userId: args.userId,\r\n        });\r\n      case 'createUser':\r\n        return await User.create({\r\n          ...args,\r\n          createdBy: authUser._id,\r\n        });\r\n      case 'updateUserStatus':\r\n        await adminToggleUserStatus(args.userId, args.status);\r\n        return await User.findOneAndUpdate(\r\n          {\r\n            userId: args.userId,\r\n          },\r\n          {\r\n            updatedBy: authUser._id,\r\n            active: args.status,\r\n            updatedAt: new Date(),\r\n          },\r\n          {\r\n            new: true,\r\n            runValidators: true,\r\n          },\r\n        );\r\n      case 'cancelUserSubscription':\r\n        tempSubscription = {\r\n          active: false,\r\n          subscriptionType: null,\r\n          description: null,\r\n          amount: null,\r\n          subscribedOn: null,\r\n          expiringOn: null,\r\n        };\r\n        return await User.findOneAndUpdate(\r\n          {\r\n            userId: args.userId,\r\n          },\r\n          {\r\n            subscription: tempSubscription,\r\n            updatedBy: identity.claims.sub,\r\n            updatedAt: new Date(),\r\n          },\r\n          {\r\n            new: true,\r\n            runValidators: false,\r\n          },\r\n        );\r\n      case 'updateUser':\r\n        return await User.findOneAndUpdate(\r\n          {\r\n            userId: args.userId,\r\n          },\r\n          { ...args, updatedAt: new Date() },\r\n          {\r\n            new: true,\r\n            runValidators: true,\r\n          },\r\n        );\r\n      default:\r\n        throw new Error('Something went wrong! Please check your resolver mapping template');\r\n    }\r\n  } catch (error) {\r\n    // console.log('error', error);\r\n    const error2 = error;\r\n    throw error2;\r\n  }\r\n};\r\n"]}