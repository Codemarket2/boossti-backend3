{"version":3,"file":"roleSchema.js","sourceRoot":"","sources":["roleSchema.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AAUzC,MAAM,UAAU,GAAG,IAAI,iBAAM,CAC3B;IACE,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;IACpC,OAAO,EAAE;QACP,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK;QACxB,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;KAC3B;IACD,KAAK,EAAE;QACL;YACE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;YAC3B,GAAG,EAAE,MAAM;SACZ;KACF;IACD,KAAK,EAAE;QACL;YACE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;YAC3B,GAAG,EAAE,MAAM;SACZ;KACF;IACD,SAAS,EAAE;QACT,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;IACD,SAAS,EAAE;QACT,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,SAAS,GAAG,IAAA,gBAAK,EAAO,MAAM,EAAE,UAAU,CAAC,CAAC","sourcesContent":["import { Schema, model } from 'mongoose';\r\nimport { ISchema } from '../../utils/customTypes';\r\n\r\nexport interface Role extends ISchema {\r\n  name: string;\r\n  options: any;\r\n  forms: string[];\r\n  users: string[];\r\n}\r\n\r\nconst roleSchema = new Schema<Role>(\r\n  {\r\n    name: { type: String, unique: true },\r\n    options: {\r\n      type: Schema.Types.Mixed,\r\n      default: { option: false },\r\n    },\r\n    forms: [\r\n      {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'Form',\r\n      },\r\n    ],\r\n    users: [\r\n      {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'User',\r\n      },\r\n    ],\r\n    createdBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n      required: true,\r\n    },\r\n    updatedBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n    },\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\nexport const RoleModel = model<Role>('Role', roleSchema);\r\n"]}