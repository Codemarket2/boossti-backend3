{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { DB } from '../utils/DB';\r\nimport { RoleModel } from './utils/roleSchema';\r\nimport { getCurrentUser } from '../utils/authentication';\r\nimport { AppSyncEvent } from '../utils/customTypes';\r\nimport { userPopulate } from '../utils/populate';\r\nimport { User } from '../user/utils/userModel';\r\nimport { FormModel } from '../form/utils/formModel';\r\n\r\nexport const rolePopulate = [\r\n  userPopulate,\r\n  {\r\n    path: 'forms',\r\n    select: 'name',\r\n  },\r\n  {\r\n    path: 'users',\r\n    select: 'name email',\r\n  },\r\n];\r\n\r\nexport const handler = async (event: AppSyncEvent): Promise<any> => {\r\n  try {\r\n    await DB();\r\n    const {\r\n      info: { fieldName },\r\n      identity,\r\n    } = event;\r\n    const user = await getCurrentUser(identity);\r\n    let args = { ...event.arguments };\r\n\r\n    if (fieldName.toLocaleLowerCase().includes('create') && user?._id) {\r\n      args = { ...args, createdBy: user._id };\r\n    } else if (fieldName.toLocaleLowerCase().includes('update') && user?._id) {\r\n      args = { ...args, updatedBy: user._id };\r\n    }\r\n\r\n    switch (fieldName) {\r\n      case 'getRole': {\r\n        return await RoleModel.findById(args._id).populate(rolePopulate);\r\n      }\r\n      case 'getRoles': {\r\n        const { page = 1, limit = 20, search = '' } = args;\r\n        const data = await RoleModel.find({\r\n          name: { $regex: search, $options: 'i' },\r\n        })\r\n          .populate(rolePopulate)\r\n          .limit(limit * 1)\r\n          .skip((page - 1) * limit);\r\n        const count = await RoleModel.countDocuments({\r\n          name: { $regex: search, $options: 'i' },\r\n        });\r\n        return {\r\n          data,\r\n          count,\r\n        };\r\n      }\r\n      case 'createRole': {\r\n        const role = await RoleModel.create(args);\r\n        return await role.populate(rolePopulate); //.execPopulate();\r\n      }\r\n      case 'updateRole': {\r\n        const data: any = await RoleModel.findByIdAndUpdate(args._id, args, {\r\n          new: true,\r\n          runValidators: true,\r\n        });\r\n        return await data.populate(rolePopulate); //.execPopulate();\r\n      }\r\n      case 'deleteRole': {\r\n        await RoleModel.findByIdAndDelete(args._id);\r\n        return args._id;\r\n      }\r\n      default:\r\n        throw new Error('Something went wrong! Please check your Query or Mutation');\r\n    }\r\n  } catch (error) {\r\n    if (error.runThis) {\r\n      await User.findOne();\r\n      await FormModel.findOne();\r\n    }\r\n    const error2 = error;\r\n    throw error2;\r\n  }\r\n};\r\n"]}