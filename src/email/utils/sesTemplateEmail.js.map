{"version":3,"file":"sesTemplateEmail.js","sourceRoot":"","sources":["sesTemplateEmail.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAExB,MAAM,sBAAsB,GAAG,CAAC,IAAI,EAAE,EAAE;IAC7C,qBAAqB;IACrB,mEAAmE;IACnE,uBAAuB;IACvB,iCAAiC;IACjC,WAAW;IACX,2CAA2C;IAC3C,iDAAiD;IACjD,YAAY;IACZ,4CAA4C;IAC5C,0CAA0C;IAC1C,oCAAoC;IACpC,wCAAwC;IACxC,4BAA4B;IAC5B,0BAA0B;IAC1B,mCAAmC;IACnC,4CAA4C;IAC5C,mBAAmB;IACnB,WAAW;IACX,WAAW;IACX,2CAA2C;IAC3C,kCAAkC;IAClC,mCAAmC;IACnC,qCAAqC;IACrC,2EAA2E;IAC3E,OAAO;IACP,0FAA0F;AAC5F,CAAC,CAAC;AA3BW,QAAA,sBAAsB,0BA2BjC;AAEK,MAAM,cAAc,GAAG,KAAK,EAAE,IAAI,EAAE,EAAE;;IAC3C,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;IAC7E,MAAM,YAAY,GAAG;QACnB,YAAY,EAAE,mBAAmB;QACjC,QAAQ,EAAE,IAAI,CAAC,IAAI;QACnB,WAAW,EAAE,IAAI,CAAC,OAAO;QACzB,QAAQ,EAAE,EAAE;KACb,CAAC;IAEF,qCAAqC;IACrC,kDAAkD;IAClD,6CAA6C;IAE7C,gCAAgC;IAChC,sBAAsB;IACtB,wBAAwB;IACxB,yDAAyD;IACzD,OAAO;IACP,KAAK;IACL,mEAAmE;IACnE,0CAA0C;IAC1C,yBAAyB;IACzB,6DAA6D;IAC7D,MAAM;IAEN,MAAM,MAAM,GAAG;QACb,YAAY,EAAE,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,0CAAE,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACtC,WAAW,EAAE;gBACX,WAAW,EAAE,CAAC,KAAK,CAAC;aACrB;YACD,eAAe,EAAE;gBACf;oBACE,IAAI,EAAE,MAAM;oBACZ,KAAK,EAAE,YAAY;iBACpB;aACF;YACD,uBAAuB,EAAE,IAAI,CAAC,SAAS,CACrC;gBACE,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,YAAY;aACpB,IAAI,EAAE,CACR;SACF,CAAC,CAAC;QACH,oBAAoB,EAAE,MAAM;QAC5B,MAAM,EAAE,IAAI,CAAC,IAAI;QACjB,QAAQ,EAAE,mBAAmB;QAC7B,WAAW,EAAE;YACX;gBACE,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,YAAY;aACpB;SACF;QACD,mBAAmB,EAAE,IAAI,CAAC,SAAS,CACjC;YACE,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,YAAY;SACpB,IAAI,EAAE,CACR;KACF,CAAC;IACF,MAAM,QAAQ,GAAG,MAAM,KAAK;SACzB,sBAAsB,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE,IAAI;QACjD,IAAI,GAAG,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;SAC7B;QACD,oBAAoB;aACf;YACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,sBAAsB;YACzC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,GAAG,CAAC;IACb,CAAC,CAAC;SACD,OAAO,EAAE,CAAC;IAEb,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AA1EW,QAAA,cAAc,kBA0EzB;AAEF,cAAc;AACd,8BAA8B;AAC9B,wEAAwE;AACxE,iEAAiE;AACjE,gCAAgC;AAChC,KAAK;AAEL,wDAAwD;AACxD,iDAAiD;AACjD,2CAA2C","sourcesContent":["import * as AWS from 'aws-sdk';\r\nimport { createTemplate, deleteTemplate } from './sesCreateEmailTemplate';\r\nexport const sendBulkTemplatedEmail = (data) => {\r\n  //   const params = {\r\n  //     Destinations: data.collection_of_email_scraped.map((c) => ({\r\n  //       Destination: {\r\n  //         ToAddresses: c.emails,\r\n  //       },\r\n  //       ReplacementTags: data.defaultTags,\r\n  //       ReplacementTemplateData: JSON.stringify(\r\n  //         {\r\n  //           business_name: c.business_name,\r\n  //           website_link: c.website_link,\r\n  //           telephone: c.telephone,\r\n  //           postal_code: c.postal_code,\r\n  //           state: c.state,\r\n  //           city: c.city,\r\n  //           keyword: c.keyword[0],\r\n  //           Address_line1: c.Address_line1,\r\n  //         } || {},\r\n  //       ),\r\n  //     })),\r\n  //     ConfigurationSetName: 'vivek-mongo',\r\n  //     Source: 'info@boossti.com',\r\n  //     Template: data.templateName,\r\n  //     DefaultTags: data.defaultTags,\r\n  //     DefaultTemplateData: JSON.stringify(data.defaultTemplateData || {}),\r\n  //   };\r\n  //   return new AWS.SES({ region: 'us-east-1' }).sendBulkTemplatedEmail(params).promise();\r\n};\r\n\r\nexport const sendBulkEmails = async (data) => {\r\n  const sesv2 = new AWS.SES({ apiVersion: '2019-09-27', region: 'us-east-1' });\r\n  const templateData = {\r\n    templateName: 'TestEmailTemplate',\r\n    htmlPart: data.body,\r\n    subjectPart: data.subject,\r\n    textPart: '',\r\n  };\r\n\r\n  // await createTemplate(templateData)\r\n  //   .then((e) => console.log('template Created'))\r\n  //   .catch((e) => console.error(e.message));\r\n\r\n  // for creating ConfigurationSet\r\n  // var configParam = {\r\n  //   ConfigurationSet: {\r\n  //     /* required */ Name: 'sonu-config' /* required */,\r\n  //   },\r\n  // };\r\n  // sesv2.createConfigurationSet(configParam, function (err, data) {\r\n  //   if (err) console.log(err, err.stack);\r\n  //   // an error occurred\r\n  //   else console.log('config', data); // successful response\r\n  // });\r\n\r\n  const params = {\r\n    Destinations: data?.to?.map((email) => ({\r\n      Destination: {\r\n        ToAddresses: [email],\r\n      },\r\n      ReplacementTags: [\r\n        {\r\n          Name: 'user',\r\n          Value: 'Sonu_Kumar',\r\n        },\r\n      ],\r\n      ReplacementTemplateData: JSON.stringify(\r\n        {\r\n          Name: 'user',\r\n          Value: 'Sonu_Kumar',\r\n        } || {},\r\n      ),\r\n    })),\r\n    ConfigurationSetName: 'sonu',\r\n    Source: data.from,\r\n    Template: 'TestEmailTemplate',\r\n    DefaultTags: [\r\n      {\r\n        Name: 'user',\r\n        Value: 'Sonu_Kumar',\r\n      },\r\n    ],\r\n    DefaultTemplateData: JSON.stringify(\r\n      {\r\n        Name: 'user',\r\n        Value: 'Sonu_Kumar',\r\n      } || {},\r\n    ),\r\n  };\r\n  const sentData = await sesv2\r\n    .sendBulkTemplatedEmail(params, function (err, data) {\r\n      if (err) {\r\n        console.log(err, err.stack);\r\n      }\r\n      // an error occurred\r\n      else {\r\n        console.log(data); // successful response\r\n        return data;\r\n      }\r\n      return err;\r\n    })\r\n    .promise();\r\n\r\n  return sentData;\r\n};\r\n\r\n// const d = {\r\n//   from: 'info@boossti.com',\r\n//   to: ['sonu.patna0808@gmail.com', 'sonukumar.patna81800@gmail.com'],\r\n//   body: 'This is a test body of email sending from aws sesv2',\r\n//   subject: 'test bulk email',\r\n// };\r\n\r\n// deleteTemplate({ templateName: 'TestEmailTemplate' })\r\n//   .then(() => console.log('Template Deleted'))\r\n//   .catch((e) => console.log(e.message));\r\n"]}