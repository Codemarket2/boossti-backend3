{"version":3,"file":"authorization.js","sourceRoot":"","sources":["authorization.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormModel } from '../utils/formModel';\r\nimport { ResponseModel, responsePopulate } from '../utils/responseModel';\r\nimport { IResponse } from '../types/response';\r\nimport { getFieldByLabel } from './fieldHelper';\r\nimport { resolveCondition } from '../condition/resolveCondition';\r\nimport { systemForms } from './systemFormsConfig';\r\nimport { ICondition } from '../types/form';\r\nimport { getUserAttributes } from '../utils/actionHelper';\r\nimport { getAppUserRoleIds, getUserRoleIds } from './getUserRoleIds';\r\n\r\nexport enum AuthorizationActionTypes {\r\n  CREATE = 'CREATE',\r\n  VIEW = 'VIEW',\r\n  EDIT = 'EDIT',\r\n  DELETE = 'DELETE',\r\n}\r\n\r\ninterface AuthorizationPayload {\r\n  actionType: AuthorizationActionTypes;\r\n  user: IResponse;\r\n  response?: IResponse;\r\n  formId: string;\r\n  appId?: string;\r\n}\r\n\r\nexport const authorization = async ({\r\n  actionType,\r\n  user,\r\n  formId,\r\n  response,\r\n  appId,\r\n}: AuthorizationPayload) => {\r\n  try {\r\n    // debugger;\r\n    if (process?.env?.NODE_ENV === 'test') return true;\r\n    if (!actionType || !formId) {\r\n      throw new Error('actionType, formId not found in payload');\r\n    }\r\n\r\n    const { userForm, permissionsForm, roleActionConditionForm, actionPermissionsForm } =\r\n      await getSystemForms();\r\n\r\n    let userRoleIds: string[] = [];\r\n    let isSuperAdmin;\r\n\r\n    if (appId) {\r\n      const { userRoleIds: tempUserRoleIds, isSuperAdmin: tempIsSuperAdmin } =\r\n        await getAppUserRoleIds({ appId, userId: user?._id });\r\n      userRoleIds = tempUserRoleIds;\r\n      isSuperAdmin = tempIsSuperAdmin;\r\n    } else {\r\n      const { userRoleIds: tempUserRoleIds, isSuperAdmin: tempIsSuperAdmin } = await getUserRoleIds(\r\n        { user, userForm },\r\n      );\r\n      userRoleIds = tempUserRoleIds;\r\n      isSuperAdmin = tempIsSuperAdmin;\r\n    }\r\n\r\n    if (isSuperAdmin) {\r\n      return true;\r\n    }\r\n\r\n    if (!(userRoleIds?.length > 0)) {\r\n      throw new Error(\"user doesn't have any roles\");\r\n    }\r\n\r\n    // Get User Permission By Roles\r\n    const permissionFormRACField = getFieldByLabel(\r\n      systemForms.permissions.fields.roleActionCondition,\r\n      permissionsForm?.fields,\r\n    );\r\n    if (!permissionFormRACField?._id)\r\n      throw new Error('role action condition field not found in permissions form');\r\n\r\n    const permissionFormFormField = getFieldByLabel(\r\n      systemForms.permissions.fields.form,\r\n      permissionsForm?.fields,\r\n    );\r\n    if (!permissionFormFormField?._id) throw new Error('form field not found in permissions form');\r\n\r\n    const roleActionConditionFormActionPermissionField = getFieldByLabel(\r\n      systemForms.roleActionCondition.fields.actionPermissions,\r\n      roleActionConditionForm?.fields,\r\n    );\r\n    if (!roleActionConditionFormActionPermissionField?._id)\r\n      throw new Error('action field not found in permission form');\r\n\r\n    const roleActionConditionFormRoleField = getFieldByLabel(\r\n      systemForms.roleActionCondition.fields.role,\r\n      roleActionConditionForm?.fields,\r\n    );\r\n    if (!roleActionConditionFormRoleField?._id)\r\n      throw new Error('action field not found in permission form');\r\n\r\n    const formPermission = await ResponseModel.findOne({\r\n      appId,\r\n      formId: permissionsForm?._id,\r\n      'values.field': permissionFormFormField?._id,\r\n      'values.form': formId,\r\n    })\r\n      .populate(responsePopulate)\r\n      .lean();\r\n    if (!formPermission?._id) throw new Error(`No permission found for the form ${formId}`);\r\n    const roleActionConditionValues = formPermission?.values?.filter(\r\n      (value) =>\r\n        value?.field?.toString() === permissionFormRACField?._id?.toString() &&\r\n        value?.response?._id,\r\n    );\r\n\r\n    const actionPermissionsIds: string[] = [];\r\n    roleActionConditionValues?.forEach((value) => {\r\n      value?.response?.values?.forEach((v) => {\r\n        const useHasThisRole = userRoleIds?.some(\r\n          (_id) => _id?.toString() == v?.response?.toString(),\r\n        );\r\n        if (\r\n          useHasThisRole &&\r\n          v?.field?.toString() === roleActionConditionFormRoleField?._id?.toString()\r\n        ) {\r\n          value?.response?.values?.forEach((v2) => {\r\n            if (\r\n              v2?.field?.toString() ===\r\n              roleActionConditionFormActionPermissionField?._id?.toString()\r\n            ) {\r\n              if (v2?.response) {\r\n                actionPermissionsIds.push(v2?.response);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    if (!(actionPermissionsIds?.length > 0)) throw new Error(`actionPermissionsIds not found`);\r\n\r\n    const actionTypeField = getFieldByLabel(\r\n      systemForms.actionPermissions.fields.actionType,\r\n      actionPermissionsForm?.fields,\r\n    );\r\n    if (!actionTypeField?._id) throw new Error(`actionTypeField not found`);\r\n\r\n    const actionPermissionResponses = await ResponseModel.find({\r\n      appId,\r\n      formId: actionPermissionsForm?._id,\r\n      _id: { $in: actionPermissionsIds },\r\n      'values.field': actionTypeField?._id,\r\n      'values.value': actionType,\r\n    }).lean();\r\n\r\n    const conditionTypeField = getFieldByLabel(\r\n      systemForms.actionPermissions.fields.conditionType,\r\n      actionPermissionsForm?.fields,\r\n    );\r\n    if (!conditionTypeField?._id) throw new Error(`conditionTypeField not found`);\r\n\r\n    const conditionField = getFieldByLabel(\r\n      systemForms.actionPermissions.fields.condition,\r\n      actionPermissionsForm?.fields,\r\n    );\r\n    if (!conditionField?._id) throw new Error(`conditionField not found`);\r\n\r\n    let conditions: ICondition[][] = [];\r\n    let isConditionTypeAll = false;\r\n    actionPermissionResponses?.forEach((actionPermission) => {\r\n      const conditionType = actionPermission?.values?.find(\r\n        (v) => v?.field?.toString() === conditionTypeField?._id?.toString(),\r\n      )?.value;\r\n      if (conditionType === 'All') {\r\n        isConditionTypeAll = true;\r\n      } else {\r\n        const tempConditions = actionPermission?.values?.find(\r\n          (v) => v?.field?.toString() === conditionField?._id?.toString(),\r\n        )?.options?.conditions;\r\n        if (tempConditions?.length > 0) {\r\n          conditions = [...conditions, tempConditions];\r\n        }\r\n      }\r\n    });\r\n\r\n    if (isConditionTypeAll) {\r\n      return;\r\n    }\r\n\r\n    if (!(conditions?.length > 0)) {\r\n      throw new Error(`No permissions found for ${actionType} actionType`);\r\n    }\r\n    // debugger;\r\n    const userAttributes = getUserAttributes(userForm, user);\r\n    const results: boolean[] = [];\r\n    for (const condition of conditions) {\r\n      if (!results?.some((result) => result)) {\r\n        const conditionResult = await resolveCondition({\r\n          conditions: condition,\r\n          leftPartResponse: response,\r\n          authState: userAttributes,\r\n        });\r\n        results.push(conditionResult);\r\n      }\r\n    }\r\n    // debugger;\r\n    if (!results?.some((result) => result)) throw new Error('User is not authorized');\r\n    return;\r\n  } catch (error) {\r\n    console.log(error);\r\n    // debugger;\r\n    throw new Error(\r\n      `You are not authorized to perform this action, you don't have enough permission.`,\r\n    );\r\n  }\r\n};\r\n\r\nexport const getSystemForms = async () => {\r\n  const forms = await FormModel.find({\r\n    slug: {\r\n      $in: [\r\n        systemForms.users.slug,\r\n        systemForms.permissions.slug,\r\n        systemForms.roleActionCondition.slug,\r\n        systemForms.actionPermissions.slug,\r\n      ],\r\n    },\r\n  })?.lean();\r\n\r\n  const userForm = forms?.find((form) => form?.slug === systemForms.users.slug);\r\n  if (!userForm?._id) throw new Error('users form not found');\r\n\r\n  const permissionsForm = forms?.find((form) => form?.slug === systemForms.permissions.slug);\r\n  if (!permissionsForm?._id) throw new Error('permissions form not found');\r\n\r\n  const roleActionConditionForm = forms?.find(\r\n    (form) => form?.slug === systemForms.roleActionCondition.slug,\r\n  );\r\n  if (!roleActionConditionForm?._id) throw new Error('roleActionCondition form not found');\r\n\r\n  const actionPermissionsForm = forms?.find(\r\n    (form) => form?.slug === systemForms.actionPermissions.slug,\r\n  );\r\n  if (!actionPermissionsForm?._id) throw new Error('action permissions form not found');\r\n\r\n  return { userForm, permissionsForm, roleActionConditionForm, actionPermissionsForm };\r\n};\r\n"]}