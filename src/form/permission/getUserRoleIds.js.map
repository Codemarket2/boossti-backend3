{"version":3,"file":"getUserRoleIds.js","sourceRoot":"","sources":["getUserRoleIds.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormModel } from '../utils/formModel';\r\nimport { ResponseModel, responsePopulate } from '../utils/responseModel';\r\nimport { getFieldByLabel } from './fieldHelper';\r\nimport { systemForms } from './systemFormsConfig';\r\n\r\ninterface GetUserRoleIdsPayload {\r\n  user: any;\r\n  userForm: any;\r\n}\r\n\r\nexport const getUserRoleIds = async ({ user, userForm }: GetUserRoleIdsPayload) => {\r\n  // Get User Roles\r\n  const rolesField = getFieldByLabel(systemForms.users.fields.roles, userForm?.fields);\r\n  if (!rolesField?._id) throw new Error('roles field not found in users form');\r\n  const userRoleIds: string[] = [];\r\n  let isSuperAdmin = false;\r\n\r\n  if (user?._id) {\r\n    user?.values?.forEach((value) => {\r\n      if (\r\n        value?.field?.toString() === rolesField?._id?.toString() &&\r\n        value?.response?._id &&\r\n        !userRoleIds.includes(value?.response?._id)\r\n      ) {\r\n        userRoleIds.push(value?.response?._id);\r\n        const roleName = value?.response?.values?.find(\r\n          (v) => v?.field === rolesField?.options?.formField,\r\n        )?.value;\r\n        if (roleName === 'superadmin') {\r\n          isSuperAdmin = true;\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    const rolesForm = await FormModel.findOne({ slug: systemForms.roles.slug }).lean();\r\n    if (!rolesForm?._id) throw new Error('roles form not found');\r\n    const roleNamField = getFieldByLabel(systemForms.roles.fields.name, rolesForm?.fields);\r\n    if (!roleNamField?._id) throw new Error('role name field not found in roles form');\r\n    const guestRole = await ResponseModel.findOne({\r\n      formId: rolesForm?._id,\r\n      'values.field': roleNamField?._id,\r\n      'values.value': 'guest',\r\n    }).lean();\r\n    if (!guestRole?._id) throw new Error('Guest role not found');\r\n    userRoleIds.push(guestRole?._id);\r\n  }\r\n\r\n  return { userRoleIds, isSuperAdmin };\r\n};\r\n\r\ninterface IGetAppUserRoleIds {\r\n  userId: string;\r\n  appId: string;\r\n}\r\n\r\nexport const getAppUserRoleIds = async ({ userId, appId }: IGetAppUserRoleIds) => {\r\n  // Get App User Roles\r\n  const userRoleIds: string[] = [];\r\n  let isSuperAdmin = false;\r\n\r\n  const appUsersForm = await FormModel.findOne({ slug: systemForms.appUsers.slug }).lean();\r\n  if (!appUsersForm?._id) throw new Error('app users form not found');\r\n\r\n  const userField = getFieldByLabel(systemForms.appUsers.fields.user, appUsersForm?.fields);\r\n  if (!userField?._id) throw new Error('user field not found in app users form');\r\n\r\n  const appUserResponse = await ResponseModel.findOne({\r\n    appId,\r\n    'values.field': userField?._id,\r\n    'values.response': userId,\r\n  })\r\n    .populate(responsePopulate)\r\n    .lean();\r\n\r\n  const rolesField = getFieldByLabel(systemForms.appUsers.fields.roles, appUsersForm?.fields);\r\n  if (!rolesField?._id) throw new Error('roles field not found in app users form');\r\n\r\n  if (appUserResponse?._id) {\r\n    appUserResponse?.values?.forEach((value) => {\r\n      if (\r\n        value?.field?.toString() === rolesField?._id?.toString() &&\r\n        value?.response?._id &&\r\n        !userRoleIds.includes(value?.response?._id)\r\n      ) {\r\n        userRoleIds.push(value?.response?._id);\r\n        const roleName = value?.response?.values?.find(\r\n          (v) => v?.field === rolesField?.options?.formField,\r\n        )?.value;\r\n        if (roleName === 'superadmin') {\r\n          isSuperAdmin = true;\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    const rolesForm = await FormModel.findOne({ slug: systemForms.roles.slug }).lean();\r\n    if (!rolesForm?._id) throw new Error('roles form not found');\r\n    const roleNamField = getFieldByLabel(systemForms.roles.fields.name, rolesForm?.fields);\r\n    if (!roleNamField?._id) throw new Error('role name field not found in roles form');\r\n    const guestRole = await ResponseModel.findOne({\r\n      appId,\r\n      formId: rolesForm?._id,\r\n      'values.field': roleNamField?._id,\r\n      'values.value': 'guest',\r\n    }).lean();\r\n    if (!guestRole?._id) throw new Error('Guest role not found');\r\n    userRoleIds.push(guestRole?._id);\r\n  }\r\n\r\n  return { userRoleIds, isSuperAdmin };\r\n};\r\n"]}