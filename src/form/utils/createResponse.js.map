{"version":3,"file":"createResponse.js","sourceRoot":"","sources":["createResponse.ts"],"names":[],"mappings":";;;AAEA,mDAAgD;AAEzC,MAAM,cAAc,GAAG,KAAK,EAAE,QAA4B,EAAE,OAAuB,EAAE,EAAE;IAC5F,MAAM,OAAO,GAAG,EAAE,GAAG,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;IAC1C,IAAI,YAAY,CAAC;IACjB,IAAI,OAAO,EAAE;QACX,YAAY,GAAG,MAAM,6BAAa,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC;aACnE,OAAO,CAAC,OAAO,CAAC;aAChB,IAAI,CAAC,QAAQ,CAAC;aACd,IAAI,EAAE,CAAC;KACX;SAAM;QACL,YAAY,GAAG,MAAM,6BAAa,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;KAC9F;IACD,IAAI,YAAY,EAAE;QAChB,OAAO,CAAC,KAAK,GAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,IAAG,CAAC,CAAC;KACzC;IACD,IAAI,WAAW,CAAC;IAChB,IAAI,OAAO,EAAE;QACX,MAAM,cAAc,GAAG,MAAM,6BAAa,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE;YAC3D,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;QACH,WAAW,GAAG,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAG,CAAC,CAAC,CAAC;KACnC;SAAM;QACL,WAAW,GAAG,MAAM,6BAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACnD;IACD,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAxBW,QAAA,cAAc,kBAwBzB","sourcesContent":["import { ClientSession } from 'mongoose';\r\nimport { IResponse } from '../types/response';\r\nimport { ResponseModel } from './responseModel';\r\n\r\nexport const createResponse = async (response: Partial<IResponse>, session?: ClientSession) => {\r\n  const payload = { ...response, count: 1 };\r\n  let lastResponse;\r\n  if (session) {\r\n    lastResponse = await ResponseModel.findOne({ formId: payload.formId })\r\n      .session(session)\r\n      .sort('-count')\r\n      .lean();\r\n  } else {\r\n    lastResponse = await ResponseModel.findOne({ formId: payload.formId }).sort('-count').lean();\r\n  }\r\n  if (lastResponse) {\r\n    payload.count = lastResponse?.count + 1;\r\n  }\r\n  let newResponse;\r\n  if (session) {\r\n    const responsesArray = await ResponseModel.create([payload], {\r\n      session: session,\r\n    });\r\n    newResponse = responsesArray?.[0];\r\n  } else {\r\n    newResponse = await ResponseModel.create(payload);\r\n  }\r\n  return newResponse;\r\n};\r\n"]}