{"version":3,"file":"variables.js","sourceRoot":"","sources":["variables.ts"],"names":[],"mappings":";;;AAAA,iCAAiC;AAE1B,MAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;;IACvC,QAAQ,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,EAAE,CAAC;QACzB,KAAK,QAAQ,CAAC;QACd,KAAK,aAAa,CAAC,CAAC,CAAC;YACnB,OAAO,KAAK,CAAC,WAAW,CAAC;QAC3B,CAAC;QACD,KAAK,MAAM,CAAC,CAAC,CAAC;YACZ,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,KAAI,MAAM,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAClE,CAAC;QACD,KAAK,UAAU,CAAC,CAAC,CAAC;YAChB,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,KAAI,MAAM,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpE,CAAC;QACD,KAAK,SAAS,CAAC,CAAC,CAAC;YACf,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3C,CAAC;QACD,KAAK,UAAU,CAAC,CAAC,CAAC;YAChB,OAAO,QAAQ,CAAC,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,SAAS,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAAC,CAAC;QAC9D,CAAC;QACD,mBAAmB;QACnB,sDAAsD;QACtD,mCAAmC;QACnC,MAAM;QACN,0DAA0D;QAC1D,mEAAmE;QACnE,MAAM;QACN,yBAAyB;QACzB,IAAI;QACJ,OAAO,CAAC,CAAC,CAAC;YACR,OAAO,KAAK,CAAC,KAAK,CAAC;QACrB,CAAC;IACH,CAAC;AACH,CAAC,CAAC;AA/BW,QAAA,QAAQ,YA+BnB;AAEF,MAAM,QAAQ,GAAG,CAAC,SAAiB,EAAE,QAAa,EAAU,EAAE;;IAC5D,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,MAAM,WAAW,GAAG,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,0CAAE,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,MAAK,SAAS,CAAC,CAAC;IACpF,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QAC5B,IAAI,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,KAAK,EAAE,CAAC;YACb,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,KAAK,CAAC;QAC5C,CAAC;IACH,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import * as moment from 'moment';\r\n\r\nexport const getValue = (field, value) => {\r\n  switch (field?.fieldType) {\r\n    case 'number':\r\n    case 'phoneNumber': {\r\n      return value.valueNumber;\r\n    }\r\n    case 'date': {\r\n      return value?.valueDate && moment(value?.valueDate).format('L');\r\n    }\r\n    case 'dateTime': {\r\n      return value?.valueDate && moment(value?.valueDate).format('lll');\r\n    }\r\n    case 'boolean': {\r\n      return value.valueBoolean ? 'Yes' : 'No';\r\n    }\r\n    case 'response': {\r\n      return getLabel(field?.options?.formField, value?.response);\r\n    }\r\n    // case 'select': {\r\n    //   if (field?.options?.optionsTemplate === 'type') {\r\n    //     return value?.itemId?.title;\r\n    //   }\r\n    //   if (field?.options?.optionsTemplate === 'response') {\r\n    //     return getLabel(field?.options?.formField, value?.response);\r\n    //   }\r\n    //   return value?.value;\r\n    // }\r\n    default: {\r\n      return value.value;\r\n    }\r\n  }\r\n};\r\n\r\nconst getLabel = (formField: string, response: any): string => {\r\n  let label = '';\r\n  const fieldValues = response?.values?.filter((value) => value?.field === formField);\r\n  fieldValues?.forEach((f, i) => {\r\n    if (f?.value) {\r\n      label += i > 0 ? `${f?.value}` : f?.value;\r\n    }\r\n  });\r\n  return label;\r\n};\r\n"]}