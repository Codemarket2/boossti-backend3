{"version":3,"file":"cognitoGroupHandler.js","sourceRoot":"","sources":["cognitoGroupHandler.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAE/B,MAAM,8BAA8B,GAAG,IAAI,GAAG,CAAC,8BAA8B,CAAC;IAC5E,UAAU,EAAE,YAAY;CACzB,CAAC,CAAC;AAyBI,MAAM,kBAAkB,GAAG,KAAK,EAAE,OAA4B,EAAE,EAAE;IACvE,MAAM,MAAM,GAAG;QACb,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,WAAW,EAAE,OAAO,CAAC,WAAW;QAChC,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,OAAO,EAAE,OAAO,CAAC,OAAO;KACzB,CAAC;IACF,OAAO,8BAA8B,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;AACtE,CAAC,CAAC;AATW,QAAA,kBAAkB,sBAS7B;AAEK,MAAM,kBAAkB,GAAG,KAAK,EAAE,OAA4B,EAAE,EAAE;IACvE,MAAM,MAAM,GAAG;QACb,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,WAAW,EAAE,OAAO,CAAC,WAAW;QAChC,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,OAAO,EAAE,OAAO,CAAC,OAAO;KACzB,CAAC;IACF,OAAO,8BAA8B,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;AACtE,CAAC,CAAC;AATW,QAAA,kBAAkB,sBAS7B;AACK,MAAM,kBAAkB,GAAG,KAAK,EAAE,OAA4B,EAAE,EAAE;IACvE,MAAM,MAAM,GAAG;QACb,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,UAAU,EAAE,OAAO,CAAC,UAAU;KAC/B,CAAC;IACF,OAAO,8BAA8B,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;AACtE,CAAC,CAAC;AANW,QAAA,kBAAkB,sBAM7B;AAEK,MAAM,YAAY,GAAG,KAAK,EAAE,OAAsB,EAAE,EAAE;IAC3D,MAAM,MAAM,GAAG;QACb,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,SAAS,EAAE,OAAO,CAAC,SAAS;KAC7B,CAAC;IACF,OAAO,8BAA8B,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;AACrE,CAAC,CAAC;AAPW,QAAA,YAAY,gBAOvB;AAEK,MAAM,gBAAgB,GAAG,KAAK,EAAE,OAAyB,EAAE,EAAE;IAClE,MAAM,MAAM,GAAG;QACb,UAAU,EAAE,OAAO,CAAC,UAAU;QAC9B,SAAS,EAAE,OAAO,CAAC,SAAS;KAC7B,CAAC;IACF,OAAO,8BAA8B,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;AACxE,CAAC,CAAC;AANW,QAAA,gBAAgB,oBAM3B","sourcesContent":["import * as AWS from 'aws-sdk';\r\n\r\nconst cognitoidentityserviceprovider = new AWS.CognitoIdentityServiceProvider({\r\n  apiVersion: '2016-04-18',\r\n});\r\n\r\ninterface ICreateCognitoGroup {\r\n  GroupName: string;\r\n  UserPoolId: string;\r\n  Description?: string;\r\n  Precedence?: number;\r\n  RoleArn?: string;\r\n}\r\ninterface IDeleteCognitoGroup {\r\n  GroupName: string;\r\n  UserPoolId: string;\r\n}\r\n\r\ninterface IGetGroupList {\r\n  UserPoolId: string;\r\n  Limit?: number;\r\n  NextToken?: string;\r\n}\r\n\r\ninterface IGetUserPoolList {\r\n  MaxResults: number;\r\n  NextToken?: string;\r\n}\r\n\r\nexport const createCognitoGroup = async (payload: ICreateCognitoGroup) => {\r\n  const params = {\r\n    GroupName: payload.GroupName,\r\n    UserPoolId: payload.UserPoolId,\r\n    Description: payload.Description,\r\n    Precedence: payload.Precedence,\r\n    RoleArn: payload.RoleArn,\r\n  };\r\n  return cognitoidentityserviceprovider.createGroup(params).promise();\r\n};\r\n\r\nexport const updateCognitoGroup = async (payload: ICreateCognitoGroup) => {\r\n  const params = {\r\n    GroupName: payload.GroupName,\r\n    UserPoolId: payload.UserPoolId,\r\n    Description: payload.Description,\r\n    Precedence: payload.Precedence,\r\n    RoleArn: payload.RoleArn,\r\n  };\r\n  return cognitoidentityserviceprovider.updateGroup(params).promise();\r\n};\r\nexport const deleteCognitoGroup = async (payload: IDeleteCognitoGroup) => {\r\n  const params = {\r\n    GroupName: payload.GroupName,\r\n    UserPoolId: payload.UserPoolId,\r\n  };\r\n  return cognitoidentityserviceprovider.deleteGroup(params).promise();\r\n};\r\n\r\nexport const getGroupList = async (payload: IGetGroupList) => {\r\n  const params = {\r\n    UserPoolId: payload.UserPoolId,\r\n    Limit: payload.Limit,\r\n    NextToken: payload.NextToken,\r\n  };\r\n  return cognitoidentityserviceprovider.listGroups(params).promise();\r\n};\r\n\r\nexport const getUserPoolsList = async (payload: IGetUserPoolList) => {\r\n  const params = {\r\n    MaxResults: payload.MaxResults,\r\n    NextToken: payload.NextToken,\r\n  };\r\n  return cognitoidentityserviceprovider.listUserPools(params).promise();\r\n};\r\n"]}