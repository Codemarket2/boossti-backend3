{"version":3,"file":"sectionModel.js","sourceRoot":"","sources":["sectionModel.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AAEzC,0DAAyE;AACzE,kEAA6E;AAU7E,MAAM,aAAa,GAAG,IAAI,iBAAM,CAC9B;IACE,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,uBAAW,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC5C,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,2BAAW,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC5C,OAAO,EAAE;QACP,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK;QACxB,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;KAC3B;IACD,SAAS,EAAE;QACT,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;IACD,SAAS,EAAE;QACT,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,YAAY,GAAG,IAAA,gBAAK,EAAU,SAAS,EAAE,aAAa,CAAC,CAAC;AAExD,QAAA,eAAe,GAAG,CAAC,GAAG,0BAAc,EAAE,GAAG,8BAAc,CAAC,CAAC","sourcesContent":["import { Schema, model } from 'mongoose';\r\nimport { ISchema } from '../../utils/customTypes';\r\nimport { fieldSchema, fieldsPopulate } from '../../form/utils/formModel';\r\nimport { valueSchema, valuesPopulate } from '../../form/utils/responseModel';\r\nimport { IValue } from '../types/response';\r\nimport { IField } from '../types/form';\r\n\r\nexport interface Section extends ISchema {\r\n  fields: IField[];\r\n  values: IValue[];\r\n  options: any;\r\n}\r\n\r\nconst sectionSchema = new Schema<Section>(\r\n  {\r\n    fields: { type: [fieldSchema], default: [] },\r\n    values: { type: [valueSchema], default: [] },\r\n    options: {\r\n      type: Schema.Types.Mixed,\r\n      default: { option: false },\r\n    },\r\n    createdBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n      required: true,\r\n    },\r\n    updatedBy: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n    },\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\nexport const SectionModel = model<Section>('Section', sectionSchema);\r\n\r\nexport const sectionPopulate = [...fieldsPopulate, ...valuesPopulate];\r\n"]}