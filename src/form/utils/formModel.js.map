{"version":3,"file":"formModel.js","sourceRoot":"","sources":["formModel.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AACzC,mDAAoD;AACpD,2DAAwD;AAG3C,QAAA,WAAW,GAAG,IAAI,iBAAM,CAAS;IAC5C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC3C,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,UAAU;KAChB;IACD,OAAO,EAAE;QACP,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK;QACxB,OAAO,EAAE,EAAE,aAAa,EAAE,KAAK,EAAE;KAClC;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;CACF,CAAC,CAAC;AAEH,MAAM,UAAU,GAAG,IAAA,2BAAY,EAAC;IAC9B,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;IACpC,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACtB,MAAM,EAAE,CAAC,mBAAW,CAAC;IACrB,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK;QACxB,OAAO,EAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE;KACrC;IACD,SAAS,EAAE;QACT,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;CACF,CAAC,CAAC;AAEU,QAAA,SAAS,GAAG,IAAA,gBAAK,EAAQ,MAAM,EAAE,UAAU,CAAC,CAAC;AAE7C,QAAA,cAAc,GAAG;IAC5B;QACE,IAAI,EAAE,iBAAiB;QACvB,MAAM,EAAE,8BAA8B;KACvC;IACD;QACE,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,MAAM;KACf;CACF,CAAC;AAEW,QAAA,YAAY,GAAG,CAAC,uBAAY,EAAE,GAAG,sBAAc,CAAC,CAAC","sourcesContent":["import { Schema, model } from 'mongoose';\r\nimport { userPopulate } from '../../utils/populate';\r\nimport { extendSchema } from '../../utils/extendSchema';\r\nimport { IField, IForm } from '../types/form';\r\n\r\nexport const fieldSchema = new Schema<IField>({\r\n  label: { type: String, required: true },\r\n  fieldType: { type: String, required: true },\r\n  template: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'Template',\r\n  },\r\n  options: {\r\n    type: Schema.Types.Mixed,\r\n    default: { mutipleValues: false },\r\n  },\r\n  form: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'Form',\r\n  },\r\n});\r\n\r\nconst formSchema = extendSchema({\r\n  name: { type: String, unique: true },\r\n  slug: { type: String },\r\n  fields: [fieldSchema],\r\n  settings: {\r\n    type: Schema.Types.Mixed,\r\n    default: { mutipleResponses: false },\r\n  },\r\n  published: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n});\r\n\r\nexport const FormModel = model<IForm>('Form', formSchema);\r\n\r\nexport const fieldsPopulate = [\r\n  {\r\n    path: 'fields.template',\r\n    select: 'title description media slug',\r\n  },\r\n  {\r\n    path: 'fields.form',\r\n    select: 'name',\r\n  },\r\n];\r\n\r\nexport const formPopulate = [userPopulate, ...fieldsPopulate];\r\n"]}