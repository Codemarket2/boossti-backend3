{"version":3,"file":"responseModel.js","sourceRoot":"","sources":["responseModel.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AACzC,mDAAoD;AACpD,2DAAwD;AAG3C,QAAA,WAAW,GAAG,IAAI,iBAAM,CAAS;IAC5C,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE;IACpC,SAAS,EAAE,IAAI;IACf,WAAW,EAAE,MAAM;IACnB,YAAY,EAAE,OAAO;IACrB,KAAK,EAAE;QACL,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;QACxC,OAAO,EAAE,EAAE;KACZ;IACD,MAAM,EAAE;QACN,IAAI,EAAE,CAAC,MAAM,CAAC;QACd,OAAO,EAAE,EAAE;KACZ;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,UAAU;KAChB;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,UAAU;KAChB;IACD,OAAO,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;CAClE,CAAC,CAAC;AAEU,QAAA,cAAc,GAAG,IAAA,2BAAY,EAAC;IACzC,MAAM,EAAE;QACN,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,MAAM;KACZ;IACD,KAAK,EAAE;QACL,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,UAAU;KAChB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,gBAAgB,EAAE;QAChB,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,OAAO,EAAE,IAAI;KACd;IACD,UAAU,EAAE;QACV,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,OAAO,EAAE,IAAI;KACd;IACD,MAAM,EAAE,CAAC,mBAAW,CAAC;IACrB,OAAO,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE;CAClE,CAAC,CAAC;AAEH,sBAAc,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AAEnD,QAAA,aAAa,GAAG,IAAA,gBAAK,EAAY,UAAU,EAAE,sBAAc,CAAC,CAAC;AAE7D,QAAA,cAAc,GAAG;IAC5B;QACE,IAAI,EAAE,iBAAiB;QACvB,MAAM,EAAE,kBAAkB;KAC3B;IACD,IAAI;IACJ,yBAAyB;IACzB,sCAAsC;IACtC,KAAK;IACL;QACE,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,MAAM;KACf;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,MAAM,EAAE,QAAQ;KACjB;CACF,CAAC;AAEW,QAAA,gBAAgB,GAAG,CAAC,uBAAY,EAAE,GAAG,sBAAc,CAAC,CAAC;AAErD,QAAA,kBAAkB,GAAG;IAChC,GAAG,wBAAgB;IACnB;QACE,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,WAAW;KACpB;CACF,CAAC","sourcesContent":["import { Schema, model } from 'mongoose';\r\nimport { userPopulate } from '../../utils/populate';\r\nimport { extendSchema } from '../../utils/extendSchema';\r\nimport { IResponse, IValue } from '../types/response';\r\n\r\nexport const valueSchema = new Schema<IValue>({\r\n  field: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  value: { type: String, default: '' },\r\n  valueDate: Date,\r\n  valueNumber: Number,\r\n  valueBoolean: Boolean,\r\n  media: {\r\n    type: [{ url: String, caption: String }],\r\n    default: [],\r\n  },\r\n  values: {\r\n    type: [String],\r\n    default: [],\r\n  },\r\n  template: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'Template',\r\n  },\r\n  page: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'Page',\r\n  },\r\n  form: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'Form',\r\n  },\r\n  response: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'Response',\r\n  },\r\n  options: { type: Schema.Types.Mixed, default: { option: false } },\r\n});\r\n\r\nexport const responseSchema = extendSchema({\r\n  formId: {\r\n    type: Schema.Types.ObjectId,\r\n    required: true,\r\n    ref: 'Form',\r\n  },\r\n  appId: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'Response',\r\n  },\r\n  count: {\r\n    type: Number,\r\n    required: true,\r\n  },\r\n  parentResponseId: {\r\n    type: Schema.Types.ObjectId,\r\n    default: null,\r\n  },\r\n  workflowId: {\r\n    type: Schema.Types.ObjectId,\r\n    default: null,\r\n  },\r\n  values: [valueSchema],\r\n  options: { type: Schema.Types.Mixed, default: { option: false } },\r\n});\r\n\r\nresponseSchema.index({ formId: 1, count: 1 }, { unique: true });\r\n\r\nexport const ResponseModel = model<IResponse>('Response', responseSchema);\r\n\r\nexport const valuesPopulate = [\r\n  {\r\n    path: 'values.template',\r\n    select: 'title slug media',\r\n  },\r\n  // {\r\n  //   path: 'values.page',\r\n  //   select: 'types title media slug',\r\n  // },\r\n  {\r\n    path: 'values.form',\r\n    select: 'name',\r\n  },\r\n  {\r\n    path: 'values.response',\r\n    select: 'values',\r\n  },\r\n];\r\n\r\nexport const responsePopulate = [userPopulate, ...valuesPopulate];\r\n\r\nexport const myResponsePopulate = [\r\n  ...responsePopulate,\r\n  {\r\n    path: 'formId',\r\n    select: 'name slug',\r\n  },\r\n];\r\n"]}