{"version":3,"file":"createFeed.js","sourceRoot":"","sources":["createFeed.ts"],"names":[],"mappings":";;;AAAA,uEAA8D;AAC9D,4DAAyD;AACzD,kDAA+C;AAC/C,sEAAmE;AAS5D,MAAM,UAAU,GAAG,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAsB,EAAE,EAAE;;IAC7F,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,qBAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,MAAA,+BAAW,aAAX,+BAAW,uBAAX,+BAAW,CAAE,IAAI,0CAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QACnF,MAAM,MAAM,GAAU,EAAE,CAAC;QACzB,IAAI,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,GAAG,EAAE,CAAC;YAClB,MAAM,cAAc,GAAG,IAAA,yCAAmB,EAAC,+BAAW,aAAX,+BAAW,uBAAX,+BAAW,CAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;YACxE,MAAM,YAAY,GAAG,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAG,MAAA,MAAA,+BAAW,aAAX,+BAAW,uBAAX,+BAAW,CAAE,IAAI,0CAAE,MAAM,0CAAE,OAAO,CAAC,CAAC;YAC1E,MAAM,SAAS,GAAG,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAG,MAAA,MAAA,+BAAW,aAAX,+BAAW,uBAAX,+BAAW,CAAE,IAAI,0CAAE,MAAM,0CAAE,IAAI,CAAC,CAAC;YACpE,MAAM,WAAW,GAAG,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAG,MAAA,MAAA,+BAAW,aAAX,+BAAW,uBAAX,+BAAW,CAAE,IAAI,0CAAE,MAAM,0CAAE,MAAM,CAAC,CAAC;YACxE,MAAM,aAAa,GAAG,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAG,MAAA,MAAA,+BAAW,aAAX,+BAAW,uBAAX,+BAAW,CAAE,IAAI,0CAAE,MAAM,0CAAE,QAAQ,CAAC,CAAC;YAC5E,IAAI,YAAY,EAAE,CAAC;gBACjB,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAC5D,CAAC;YACD,IAAI,SAAS,EAAE,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACtD,CAAC;YACD,IAAI,WAAW,EAAE,CAAC;gBAChB,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC5D,CAAC;YACD,IAAI,aAAa,EAAE,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC5E,CAAC;YACD,MAAM,IAAA,+BAAc,EAAC,EAAE,MAAM,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,WAAW;IACb,CAAC;AACH,CAAC,CAAC;AA3BW,QAAA,UAAU,cA2BrB","sourcesContent":["import { systemForms } from '../permission/systemFormsConfig';\r\nimport { createResponse } from '../utils/createResponse';\r\nimport { FormModel } from '../utils/formModel';\r\nimport { getSystemFormFields } from '../utils/getSystemFormFields';\r\n\r\ninterface ICreateFeedPayload {\r\n  message: string;\r\n  link: string;\r\n  createdBy: string;\r\n  receiver: string;\r\n}\r\n\r\nexport const createFeed = async ({ message, link, createdBy, receiver }: ICreateFeedPayload) => {\r\n  try {\r\n    const feedForm = await FormModel.findOne({ slug: systemForms?.feed?.slug }).lean();\r\n    const values: any[] = [];\r\n    if (feedForm?._id) {\r\n      const feedFormFields = getSystemFormFields(systemForms?.feed, feedForm);\r\n      const messageField = feedFormFields?.[systemForms?.feed?.fields?.message];\r\n      const linkField = feedFormFields?.[systemForms?.feed?.fields?.link];\r\n      const statusField = feedFormFields?.[systemForms?.feed?.fields?.status];\r\n      const receiverField = feedFormFields?.[systemForms?.feed?.fields?.receiver];\r\n      if (messageField) {\r\n        values.push({ field: messageField?._id, value: message });\r\n      }\r\n      if (linkField) {\r\n        values.push({ field: linkField?._id, value: link });\r\n      }\r\n      if (statusField) {\r\n        values.push({ field: statusField?._id, value: 'unread' });\r\n      }\r\n      if (receiverField) {\r\n        values.push({ field: receiverField?._id, value: '', response: receiver });\r\n      }\r\n      await createResponse({ formId: feedForm?._id, values, createdBy });\r\n    }\r\n  } catch (error) {\r\n    // debugger\r\n  }\r\n};\r\n"]}