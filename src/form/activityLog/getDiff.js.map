{"version":3,"file":"getDiff.js","sourceRoot":"","sources":["getDiff.ts"],"names":[],"mappings":";;AAMA,0BAmBC;AAzBD,mCAAmC;AACnC,mCAAiC;AACjC,mCAAiC;AACjC,mCAAkC;AAClC,mCAAgC;AAEhC,SAAgB,OAAO,CAAC,OAAO,EAAE,MAAM;IACrC,SAAS,OAAO,CAAC,MAAM,EAAE,OAAO;QAC9B,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAC1B,OAAO,IAAA,kBAAS,EAAC,MAAM,EAAE,UAAU,MAAW,EAAE,KAAK,EAAE,GAAG;YACxD,IAAI,CAAC,IAAA,gBAAO,EAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;gBAClC,MAAM,SAAS,GAAG,IAAA,gBAAO,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAE/D,MAAM,CAAC,SAAS,CAAC;oBACf,IAAA,iBAAQ,EAAC,KAAK,CAAC;wBACf,IAAA,iBAAQ,EAAC,OAAO,CAAC,GAAG,CAAC,CAAC;wBACtB,CAAC,IAAA,eAAM,EAAC,KAAK,CAAC;wBACd,CAAC,IAAA,eAAM,EAAC,OAAO,CAAC,GAAG,CAAC,CAAC;wBACrB,GAAG,KAAK,KAAK;wBACX,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;wBAC9B,CAAC,CAAC,KAAK,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,OAAO,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AAClC,CAAC;AAED,+BAA+B;AAE/B,2CAA2C;AAC3C,qCAAqC;AACrC,gEAAgE;AAChE,0CAA0C;AAC1C,wBAAwB;AACxB,4FAA4F;AAC5F,UAAU;AACV,MAAM;AACN,gCAAgC;AAChC,KAAK","sourcesContent":["import { transform } from 'lodash';\r\nimport { isEqual } from 'lodash';\r\nimport { isArray } from 'lodash';\r\nimport { isObject } from 'lodash';\r\nimport { isDate } from 'lodash';\r\n\r\nexport function getDiff(origObj, newObj) {\r\n  function changes(newObj, origObj) {\r\n    let arrayIndexCounter = 0;\r\n    return transform(newObj, function (result: any, value, key) {\r\n      if (!isEqual(value, origObj[key])) {\r\n        const resultKey = isArray(origObj) ? arrayIndexCounter++ : key;\r\n\r\n        result[resultKey] =\r\n          isObject(value) &&\r\n          isObject(origObj[key]) &&\r\n          !isDate(value) &&\r\n          !isDate(origObj[key]) &&\r\n          key !== '_id'\r\n            ? changes(value, origObj[key])\r\n            : value;\r\n      }\r\n    });\r\n  }\r\n  return changes(newObj, origObj);\r\n}\r\n\r\n// import * as _ from 'lodash';\r\n\r\n// export const getDiff = (curr, prev) => {\r\n//   function changes(object, base) {\r\n//     return _.transform(object, (result: any, value, key) => {\r\n//       if (!_.isEqual(value, base[key]))\r\n//         result[key] =\r\n//           _.isObject(value) && _.isObject(base[key]) ? changes(value, base[key]) : value;\r\n//     });\r\n//   }\r\n//   return changes(curr, prev);\r\n// };\r\n"]}