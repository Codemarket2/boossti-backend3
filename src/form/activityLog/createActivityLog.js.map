{"version":3,"file":"createActivityLog.js","sourceRoot":"","sources":["createActivityLog.ts"],"names":[],"mappings":"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","sourcesContent":["import { ClientSession } from 'mongoose';\r\nimport { systemForms } from '../permission/systemFormsConfig';\r\nimport { createResponse } from '../utils/createResponse';\r\nimport { FormModel } from '../utils/formModel';\r\nimport { getSystemFormFields } from '../utils/getSystemFormFields';\r\nimport { ResponseModel } from '../utils/responseModel';\r\n\r\ninterface ICreateActivityLogPayload {\r\n  session: ClientSession;\r\n  model: string;\r\n  documentId: string;\r\n  difference: any;\r\n  createdBy: string;\r\n  action: 'CREATE' | 'UPDATE' | 'DELETE';\r\n}\r\n\r\nexport const createActivityLog = async ({\r\n  model,\r\n  documentId,\r\n  session,\r\n  difference,\r\n  createdBy,\r\n  action,\r\n}: ICreateActivityLogPayload) => {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return;\r\n  }\r\n  const activityLogForm = await FormModel.findOne({ slug: systemForms?.activityLogCard?.slug });\r\n\r\n  if (!activityLogForm?._id) {\r\n    throw new Error('activityLogForm not found');\r\n  }\r\n\r\n  const activityLogFormFields = getSystemFormFields(systemForms?.activityLogCard, activityLogForm);\r\n  const actionField = activityLogFormFields?.[systemForms?.activityLogCard?.fields?.action];\r\n  const modelField = activityLogFormFields?.[systemForms?.activityLogCard?.fields?.model];\r\n  const differenceField = activityLogFormFields?.[systemForms?.activityLogCard?.fields?.difference];\r\n  const documentIdField = activityLogFormFields?.[systemForms?.activityLogCard?.fields?.documentId];\r\n  if (!actionField?._id || !modelField?._id || !differenceField?._id || !documentIdField?._id) {\r\n    throw new Error(\r\n      `actionField, modelField, differenceField, documentIdField fields not found in ${activityLogForm?.name} form`,\r\n    );\r\n  }\r\n  const payload: any = { formId: activityLogForm?._id, createdBy, values: [] };\r\n  payload.values?.push({\r\n    field: differenceField?._id,\r\n    value: JSON.stringify(difference),\r\n    options: { json: difference },\r\n  });\r\n  payload.values?.push({ field: documentIdField?._id, value: documentId });\r\n  const modelResponseId = await getModelResponseId(model);\r\n  payload.values?.push({ field: modelField?._id, value: '', response: modelResponseId });\r\n  const actionTypeResponseId = await getActionTypeResponseId(action);\r\n  payload.values?.push({ field: actionField?._id, value: '', response: actionTypeResponseId });\r\n  await createResponse(payload, session);\r\n};\r\n\r\nconst getModelResponseId = async (modelName) => {\r\n  const modelForm = await FormModel.findOne({ slug: systemForms?.model?.slug });\r\n  if (!modelForm?._id) throw new Error('Model Form not found');\r\n  const nameField = modelForm?.fields?.find(\r\n    (field) => field?.label?.toLowerCase() === systemForms?.model?.fields?.name,\r\n  );\r\n  const modelResponse = await ResponseModel.findOne({\r\n    formId: modelForm?._id,\r\n    'values.field': nameField?._id,\r\n    'values.value': modelName,\r\n  });\r\n  if (!modelResponse?._id) throw new Error(`\"${modelName}\" Model Response not found`);\r\n  return modelResponse?._id;\r\n};\r\n\r\nconst getActionTypeResponseId = async (actionType) => {\r\n  const actionTypesForm = await FormModel.findOne({ slug: systemForms?.userActionTypes?.slug });\r\n  if (!actionTypesForm?._id) throw new Error('Action Types Form not found');\r\n  const nameField = actionTypesForm?.fields?.find(\r\n    (field) => field?.label?.toLowerCase() === systemForms?.model?.fields?.name,\r\n  );\r\n  const actionTypeResponse = await ResponseModel.findOne({\r\n    formId: actionTypesForm?._id,\r\n    'values.field': nameField?._id,\r\n    'values.value': actionType,\r\n  });\r\n  if (!actionTypeResponse?._id) throw new Error(`\"${actionType}\" Action Type Response not found`);\r\n  return actionTypeResponse?._id;\r\n};\r\n"]}