{"version":3,"file":"runInTransaction.js","sourceRoot":"","sources":["runInTransaction.ts"],"names":[],"mappings":"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","sourcesContent":["import * as mongoose from 'mongoose';\r\nimport { ClientSession } from 'mongoose';\r\n// import { getDiff } from '../form/activityLog/getDiff';\r\nimport { createActivityLog } from '../form/activityLog/createActivityLog';\r\n\r\ntype TransactionCallback = (session: ClientSession, payload: any) => Promise<any>;\r\n\r\ninterface IOperation {\r\n  action: 'CREATE' | 'UPDATE' | 'DELETE';\r\n  Model: mongoose.Model<any>;\r\n  args: any;\r\n  populate?: any;\r\n  user: any;\r\n}\r\n\r\nexport const runInTransaction = async (operation: IOperation, callback?: TransactionCallback) => {\r\n  const session: ClientSession = await mongoose.startSession();\r\n\r\n  session.startTransaction();\r\n  let data;\r\n\r\n  try {\r\n    const { action, Model, args, populate, user } = operation;\r\n    const modelName = Model.modelName;\r\n    switch (action) {\r\n      case 'CREATE': {\r\n        data = await Model.create([args], { session: session });\r\n        data = data[0];\r\n        await createActivityLog({\r\n          session,\r\n          documentId: data._id,\r\n          model: modelName,\r\n          difference: data,\r\n          createdBy: user?._id,\r\n          action,\r\n        });\r\n        if (populate) {\r\n          data = await Model.findById(data._id).populate(populate).session(session);\r\n        }\r\n        break;\r\n      }\r\n      case 'UPDATE': {\r\n        const oldDoc = await Model.findByIdAndUpdate(args._id, args, {\r\n          runValidators: true,\r\n          session: session,\r\n        });\r\n        data = await Model.findById(args._id).session(session);\r\n        // const diff = getDiff(oldDoc?.toObject(), data?.toObject());\r\n        await createActivityLog({\r\n          session,\r\n          documentId: data._id,\r\n          model: modelName,\r\n          difference: data,\r\n          createdBy: user?._id,\r\n          action,\r\n        });\r\n        if (populate) {\r\n          data = await Model.findById(data._id).populate(populate).session(session);\r\n        }\r\n        break;\r\n      }\r\n      case 'DELETE': {\r\n        data = await Model.findByIdAndDelete(args._id, {\r\n          session: session,\r\n        });\r\n        await createActivityLog({\r\n          session,\r\n          documentId: data._id,\r\n          model: modelName,\r\n          difference: data,\r\n          createdBy: user?._id,\r\n          action,\r\n        });\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (callback) {\r\n      await callback(session, data);\r\n    }\r\n\r\n    // Commit the changes\r\n    await session.commitTransaction();\r\n  } catch (error) {\r\n    // Rollback any changes made in the database\r\n    await session.abortTransaction();\r\n\r\n    // logging the error\r\n    console.error(error);\r\n\r\n    // Rethrow the error\r\n    throw error;\r\n  } finally {\r\n    // Ending the session\r\n    session.endSession();\r\n  }\r\n  return data;\r\n};\r\n"]}