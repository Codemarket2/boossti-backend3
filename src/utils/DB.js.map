{"version":3,"file":"DB.js","sourceRoot":"","sources":["DB.ts"],"names":[],"mappings":";;;AAAA,qCAAqC;AACrC,2DAAwD;AAExD,IAAI,WAAW,CAAC;AAET,MAAM,EAAE,GAAG,KAAK,EAAE,SAAkB,EAAE,EAAE;IAC7C,IAAI,CAAC;QACH,IAAI,WAAW,EAAE,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QACvD,CAAC;aAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;YAC/C,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;QAC1D,CAAC;aAAM,CAAC;YACN,MAAM,eAAe,GAAG,kBAAkB,CAAC,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC;YACpF,MAAM,EAAE,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;YACnD,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC3C,CAAC;QACD,MAAM,IAAA,qCAAiB,GAAE,CAAC;IAC5B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC,CAAC;AAjBW,QAAA,EAAE,MAiBb","sourcesContent":["import * as mongoose from 'mongoose';\r\nimport { createCollections } from './createCollections';\r\n\r\nlet isConnected;\r\n\r\nexport const DB = async (DB_STRING?: string) => {\r\n  try {\r\n    if (isConnected) {\r\n      console.log('=> using existing database connection');\r\n    } else if (!process.env.DATABASE && !DB_STRING) {\r\n      throw new Error('Database connection string not found');\r\n    } else {\r\n      const escapedDBString = encodeURIComponent(DB_STRING || process.env.DATABASE || '');\r\n      const db = await mongoose.connect(escapedDBString);\r\n      isConnected = db.connections[0].readyState;  \r\n      console.log('DB Connection Successful!');\r\n    }\r\n    await createCollections();\r\n  } catch (error) {\r\n    console.log('DB Connection Failed');\r\n    throw error;\r\n  }\r\n};\r\n"]}