{"version":3,"file":"onesignal.js","sourceRoot":"","sources":["onesignal.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAQ/B,MAAM,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;AAErD,MAAM,oBAAoB,GAAG,UAAU,OAAiB;IAC7D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,IAAI,gBAAgB,IAAI,iBAAiB,EAAE,CAAC;YAC1C,MAAM,IAAI,GAAG;gBACX,MAAM,EAAE,gBAAgB;gBAExB,QAAQ,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,KAAK,EAAE;gBAC/B,QAAQ,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,OAAO,EAAE;gBACjC,6BAA6B,EAAE,MAAM;gBACrC,yBAAyB,EAAE,OAAO,CAAC,OAAO;aAC3C,CAAC;YACF,MAAM,OAAO,GAAG;gBACd,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE,eAAe;gBACrB,aAAa,EAAE,SAAS,iBAAiB,EAAE,EAAE,qCAAqC;aACnF,CAAC;YAEF,MAAM,OAAO,GAAG;gBACd,IAAI,EAAE,eAAe;gBACrB,IAAI,EAAE,GAAG;gBACT,IAAI,EAAE,uBAAuB;gBAC7B,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,OAAO;aACjB,CAAC;YAEF,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,GAAG;gBAC9C,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,IAAI;oBAC3B,qBAAqB;oBACrB,OAAO,CAAC,IAAI,CAAC,CAAC;gBAChB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC,CAAC;YAEH,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAChC,GAAG,CAAC,GAAG,EAAE,CAAC;QACZ,CAAC;;YAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAzCW,QAAA,oBAAoB,wBAyC/B","sourcesContent":["import * as https from 'https';\r\n\r\ninterface IPayload {\r\n  title: string;\r\n  message?: string;\r\n  userIds: string[];\r\n}\r\n\r\nconst { ONESIGNAL_APP_ID, ONESIGNAL_API_KEY } = process.env;\r\n\r\nexport const sendPushNotification = function (payload: IPayload) {\r\n  return new Promise((resolve, reject) => {\r\n    if (ONESIGNAL_APP_ID && ONESIGNAL_API_KEY) {\r\n      const data = {\r\n        app_id: ONESIGNAL_APP_ID,\r\n\r\n        headings: { en: payload.title },\r\n        contents: { en: payload.message },\r\n        channel_for_external_user_ids: 'push',\r\n        include_external_user_ids: payload.userIds,\r\n      };\r\n      const headers = {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        host: 'onesignal.com',\r\n        Authorization: `Basic ${ONESIGNAL_API_KEY}`, // + process.env.ONESIGNAL_API_KEY ||\r\n      };\r\n\r\n      const options = {\r\n        host: 'onesignal.com',\r\n        port: 443,\r\n        path: '/api/v1/notifications',\r\n        method: 'POST',\r\n        headers: headers,\r\n      };\r\n\r\n      const req = https.request(options, function (res) {\r\n        res.on('data', function (data) {\r\n          // console.log(data);\r\n          resolve(true);\r\n        });\r\n      });\r\n      req.on('error', function (e) {\r\n        console.log('ERROR:');\r\n        console.log(e);\r\n        reject(e);\r\n      });\r\n\r\n      req.write(JSON.stringify(data));\r\n      req.end();\r\n    } else reject('No App ID Provided');\r\n  });\r\n};\r\n"]}