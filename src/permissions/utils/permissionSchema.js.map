{"version":3,"file":"permissionSchema.js","sourceRoot":"","sources":["permissionSchema.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AAiBzC,MAAM,qBAAqB,GAAG,IAAI,iBAAM,CACtC;IACE,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;QACZ,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,CAAC;QACN,QAAQ,EAAE,+BAA+B;QACzC,IAAI;QACJ,wBAAwB;QACxB,kDAAkD;QAClD,yBAAyB;QACzB,OAAO;QACP,mCAAmC;QACnC,KAAK;KACN;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,EAAE;QACP,QAAQ,EAAE,IAAI;QACd,QAAQ,EAAE,qBAAqB;QAC/B,IAAI;QACJ,wBAAwB;QACxB,wCAAwC;QACxC,yBAAyB;QACzB,OAAO;QACP,qCAAqC;QACrC,KAAK;KACN;IACD,WAAW,EAAE;QACX,IAAI,EAAE,MAAM;QACZ,GAAG,EAAE,IAAI;KACV;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,CAAC;KACX;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,MAAM,EAAE;QACN,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,OAAO,EAAE;QACP,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,SAAS,EAAE;QACT,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,SAAS,EAAE;QACT,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,SAAS,EAAE;QACT,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,WAAW,GAAG,IAAA,gBAAK,EAAmB,aAAa,EAAE,qBAAqB,CAAC,CAAC","sourcesContent":["import { Schema, model } from 'mongoose';\r\nimport { ISchema } from '../../utils/customTypes';\r\n\r\nexport interface IPermissionGroup extends ISchema {\r\n  name: string;\r\n  userPoolId: string;\r\n  description: string;\r\n  precedence?: number;\r\n  view?: string;\r\n  create?: string;\r\n  update?: string;\r\n  delete?: string;\r\n  viewAll: boolean;\r\n  createAll: boolean;\r\n  updateAll: boolean;\r\n  deleteAll: boolean;\r\n}\r\nconst permissionGroupSchema = new Schema<IPermissionGroup>(\r\n  {\r\n    name: {\r\n      type: String,\r\n      unique: true,\r\n      max: 128,\r\n      min: 1,\r\n      validate: /[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+/u,\r\n      // {\r\n      //   validator: (v) => {\r\n      //     const re = /[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+/u;\r\n      //     return re.test(v);\r\n      //   },\r\n      //   message: 'Invalid Group name',\r\n      // },\r\n    },\r\n    userPoolId: {\r\n      type: String,\r\n      min: 1,\r\n      max: 55,\r\n      required: true,\r\n      validate: /[\\w-]+_[0-9a-zA-Z]+/,\r\n      // {\r\n      //   validator: (v) => {\r\n      //     const re = /[\\w-]+_[0-9a-zA-Z]+/;\r\n      //     return re.test(v);\r\n      //   },\r\n      //   message: 'Invalid user poll id',\r\n      // },\r\n    },\r\n    description: {\r\n      type: String,\r\n      max: 2048,\r\n    },\r\n    precedence: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    view: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    create: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    update: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    delete: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    viewAll: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    createAll: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    updateAll: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    deleteAll: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\nexport const Permissions = model<IPermissionGroup>('Permissions', permissionGroupSchema);\r\n"]}