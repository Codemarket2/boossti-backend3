{"version":3,"file":"csvFileLambda.js","sourceRoot":"","sources":["csvFileLambda.ts"],"names":[],"mappings":"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","sourcesContent":["import { DB } from '../utils/DB';\r\nimport { Contact, FailedContact } from './utils/contactModel';\r\nimport { fileParser } from '../form/utils/readCsvFile';\r\nimport { validateEmail } from '../utils/validateEmail';\r\n\r\nexport const handler = async (event: any): Promise<any> => {\r\n  console.log('csv lambda Function was invoked');\r\n  const start = Date.now();\r\n  try {\r\n    await DB();\r\n    const { fileUrl, collectionName, map, page = 1, createdBy } = event;\r\n    const maxRows = 80000;\r\n    const skipRows = (page - 1) * maxRows;\r\n    const filter: any = Object.values(map);\r\n    const fields = Object.keys(map);\r\n    const fileData = await fileParser(fileUrl, filter, maxRows, skipRows);\r\n    const successContacts: any = [];\r\n    const failedContacts: any = [];\r\n    for (const data of fileData) {\r\n      const response: any = {};\r\n      for (let i = 0; i < fields.length; i++) {\r\n        response[`${fields[i]}`] = data[map[fields[i]]];\r\n      }\r\n      response['groupName'] = collectionName;\r\n      response['createdBy'] = createdBy;\r\n      const validEmail = await validateEmail(response?.email);\r\n      if (validEmail) {\r\n        successContacts.push(response);\r\n      } else {\r\n        failedContacts.push(response);\r\n      }\r\n    }\r\n    if (successContacts.length > 0) {\r\n      await Contact.create(successContacts);\r\n    }\r\n    if (successContacts.length > 0) {\r\n      await FailedContact.create(successContacts);\r\n    }\r\n    const stop = Date.now();\r\n    console.log(`Time Taken write in mongodb = ${(stop - start) / 1000} seconds`);\r\n    return `${successContacts?.length} rows written into database`;\r\n  } catch (error) {\r\n    const stop = Date.now();\r\n    console.log(`In catch block ${(stop - start) / 1000} seconds`);\r\n    if (error.runThis) {\r\n      console.log('error', error);\r\n    }\r\n    const error2 = error;\r\n    throw error2;\r\n  }\r\n};\r\n"]}