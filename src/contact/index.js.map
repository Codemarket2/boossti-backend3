{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { DB } from '../utils/DB';\r\nimport { getCurrentUser } from '../utils/authentication';\r\nimport { AppSyncEvent } from '../utils/customTypes';\r\nimport { Contact, MailingList } from './utils/contactModel';\r\nimport { invokeCsvLambda } from './utils/invokeLambda';\r\n\r\nexport const handler = async (event: AppSyncEvent): Promise<any> => {\r\n  try {\r\n    await DB();\r\n    const {\r\n      info: { fieldName },\r\n      identity,\r\n    } = event;\r\n    const user = await getCurrentUser(identity);\r\n    let args = { ...event.arguments };\r\n\r\n    if (fieldName.toLocaleLowerCase().includes('create') && user && user._id) {\r\n      args = { ...args, createdBy: user._id };\r\n    } else if (fieldName.toLocaleLowerCase().includes('update') && user && user._id) {\r\n      args = { ...args, updatedBy: user._id };\r\n    }\r\n\r\n    switch (fieldName) {\r\n      case 'createContact': {\r\n        const response = await Contact.create(args);\r\n        return response;\r\n      }\r\n      case 'createMailingList': {\r\n        const { fileUrl, collectionName, map, createdBy } = args;\r\n        // const fileName = fileUrl?.split('/')?.pop()?.split('name-')?.pop();\r\n        await invokeCsvLambda({ fileUrl, collectionName, map, page: 1, createdBy });\r\n        return true;\r\n      }\r\n      case 'createMailingListFromContact': {\r\n        const { listName, selectedContact, createdBy } = args;\r\n        console.log(args);\r\n        const createdList = await MailingList.create({\r\n          listName,\r\n          contacts: selectedContact,\r\n          createdBy,\r\n        });\r\n        console.log(createdList);\r\n        return true;\r\n      }\r\n      case 'getAllContacts': {\r\n        const { page = 1, limit = 50 } = args;\r\n        // debugger;\r\n        const data = await Contact.find()\r\n          .sort({ createdAt: -1 })\r\n          .limit(limit * 1)\r\n          .skip((page - 1) * limit);\r\n        const count = await Contact.countDocuments();\r\n\r\n        return {\r\n          data,\r\n          count,\r\n        };\r\n      }\r\n      case 'getAllMailingList': {\r\n        // const data = await Contact.aggregate([\r\n        //   {\r\n        //     $sort: {\r\n        //       createdAt: -1,\r\n        //     },\r\n        //   },\r\n        //   {\r\n        //     $group: {\r\n        //       _id: '$groupName',\r\n        //       emailCount: { $sum: 1 },\r\n        //     },\r\n        //   },\r\n        // ]);\r\n        // console.log('data', data);\r\n        const list = await MailingList.find();\r\n        console.log(list);\r\n        return list;\r\n      }\r\n\r\n      case 'getContact': {\r\n        return await Contact.findById(args._id);\r\n      }\r\n\r\n      case 'updateContact': {\r\n        //todo update\r\n\r\n        break;\r\n      }\r\n      case 'deleteContact': {\r\n        await Contact.findByIdAndDelete(args._id);\r\n        return args._id;\r\n      }\r\n      default:\r\n        throw new Error('Something went wrong! Please check your Query or Mutation');\r\n    }\r\n  } catch (error) {\r\n    if (error.runThis) {\r\n      console.log('error', error);\r\n    }\r\n    const error2 = error;\r\n    throw error2;\r\n  }\r\n};\r\n"]}