{"version":3,"file":"contactModel.js","sourceRoot":"","sources":["contactModel.ts"],"names":[],"mappings":";;;AAAA,uCAAyC;AAoBzC,MAAM,aAAa,GAAG,IAAI,iBAAM,CAC9B;IACE,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;KACb;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;KACb;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;KACb;IACD,YAAY,EAAE;QACZ,IAAI,EAAE,MAAM;KACb;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACb;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;KACb;IACD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;KACb;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;KACb;IACD,uCAAuC;IACvC,SAAS,EAAE;QACT,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;IACD,SAAS,EAAE;QACT,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,MAAM,iBAAiB,GAAG,IAAI,iBAAM,CAClC;IACE,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,QAAQ,EAAE;QACR;YACE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;YAC3B,GAAG,EAAE,SAAS;SACf;KACF;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEW,QAAA,OAAO,GAAG,IAAA,gBAAK,EAAW,SAAS,EAAE,aAAa,CAAC,CAAC;AACpD,QAAA,aAAa,GAAG,IAAA,gBAAK,EAAW,eAAe,EAAE,aAAa,CAAC,CAAC;AAEhE,QAAA,WAAW,GAAG,IAAA,gBAAK,EAAe,aAAa,EAAE,iBAAiB,CAAC,CAAC","sourcesContent":["import { model, Schema } from 'mongoose';\r\nimport { ISchema } from '../../utils/customTypes';\r\n\r\nexport interface IContact extends ISchema {\r\n  firstName: string;\r\n  lastName: string;\r\n  title: string;\r\n  businessName: string;\r\n  email: string;\r\n  phone: string;\r\n  groupName: string;\r\n  website: string;\r\n  city: string;\r\n}\r\n\r\nexport interface IMailingList {\r\n  listName: string;\r\n  contacts: [Schema.Types.ObjectId];\r\n}\r\n\r\nconst contactSchema = new Schema<IContact>(\r\n  {\r\n    firstName: {\r\n      type: String,\r\n    },\r\n    lastName: {\r\n      type: String,\r\n    },\r\n    title: {\r\n      type: String,\r\n    },\r\n    businessName: {\r\n      type: String,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n      unique: true,\r\n    },\r\n    phone: {\r\n      type: String,\r\n    },\r\n    groupName: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    website: {\r\n      type: String,\r\n    },\r\n    city: {\r\n      type: String,\r\n    },\r\n    // bulkUploadId: Schema.Types.ObjectId,\r\n    createdBy: {\r\n      required: true,\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n    },\r\n    updatedAt: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: 'User',\r\n    },\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\nconst MailingListSchema = new Schema<IMailingList>(\r\n  {\r\n    listName: {\r\n      type: String,\r\n      unique: true,\r\n      required: true,\r\n    },\r\n    contacts: [\r\n      {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'Contact',\r\n      },\r\n    ],\r\n  },\r\n  { timestamps: true },\r\n);\r\n\r\nexport const Contact = model<IContact>('Contact', contactSchema);\r\nexport const FailedContact = model<IContact>('FailedContact', contactSchema);\r\n\r\nexport const MailingList = model<IMailingList>('MailingList', MailingListSchema);\r\n"]}