{"version":3,"file":"commentNotification.js","sourceRoot":"","sources":["commentNotification.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormModel } from '../../form/utils/formModel';\r\nimport { ResponseModel } from '../../form/utils/responseModel';\r\nimport { sendEmail } from '../../utils/email';\r\nimport { userPopulate } from '../../utils/populate';\r\nimport { CommentModel } from './commentModel';\r\nimport { getUserAttributes } from '../../form/utils/actionHelper';\r\nimport { createFeed } from '../../form/feed/createFeed';\r\n\r\nexport const sendCommentNotification = async (comment, path = '') => {\r\n  if (process.env.NODE_ENV === 'test') {\r\n    return;\r\n  }\r\n  let commentLink = path?.split('?')?.[0] || '';\r\n  if (commentLink && comment?.parentIds?.length > 0) {\r\n    comment?.parentIds?.forEach((parentId, index) => {\r\n      if (index === 0) {\r\n        commentLink += `?threadId=${parentId}`;\r\n      } else {\r\n        commentLink += `&childThreadId=${parentId}`;\r\n      }\r\n    });\r\n    commentLink += `&commentId=${comment?._id}`;\r\n  }\r\n  const receivers: any[] = [];\r\n  let response, form;\r\n  for (const [parentIdIndex, parentId] of comment.parentIds?.entries()) {\r\n    try {\r\n      let parentComment;\r\n      if (parentIdIndex === 0) {\r\n        response = await ResponseModel.findOne({ 'values._id': parentId }).populate(userPopulate);\r\n        // .session(session);\r\n        parentComment = response;\r\n        if (response?.formId) {\r\n          form = await FormModel.findById(response?.formId);\r\n          // .session(session);\r\n        }\r\n      } else {\r\n        parentComment = await CommentModel.findById(parentId).populate(userPopulate);\r\n        // .session(session);\r\n      }\r\n      const commentString = comment?.createdBy?._id?.toString();\r\n      const parentCommentString = parentComment?.createdBy?._id?.toString();\r\n      const output = commentString === parentCommentString;\r\n      if (\r\n        commentString &&\r\n        parentCommentString &&\r\n        !output &&\r\n        !receivers?.find((receiver) => receiver?._id == parentComment?.createdBy?._id)?._id\r\n      ) {\r\n        receivers.push(parentComment?.createdBy);\r\n      }\r\n    } catch (error) {\r\n      console.log('Error while getting parentId');\r\n    }\r\n  }\r\n  if (receivers?.length > 0) {\r\n    const userForm = await FormModel.findOne({ slug: process.env.USERS_FORM_SLUG });\r\n    // .session(\r\n    //   session,\r\n    // );\r\n    const to: string[] = [];\r\n    receivers?.map((receiver) => {\r\n      const userEmail = getUserAttributes(userForm, receiver)?.email;\r\n      if (userEmail) to.push(userEmail);\r\n    });\r\n    const createdBy = getUserAttributes(userForm, comment?.createdBy);\r\n    let linkToComment = ``;\r\n    if (form?.slug && response?.count) {\r\n      linkToComment = `<p><a href=\"${process.env.FRONTEND_URL}${commentLink}\"><button>View Comment</button></a></p>`;\r\n    }\r\n    const body = `\r\n      Hi there,<br/>\r\n      <p><b>${createdBy?.name}</b> just \r\n      ${comment.parentIds?.length > 1 ? 'replied to a comment' : 'commented on your response'}\r\n      </p>\r\n    ${linkToComment}\r\n    Comment Preview\r\n    ${comment.body}\r\n    `;\r\n    const emailPayload = {\r\n      from: `Boossti <${process.env.SENDER_EMAIL}>`,\r\n      to,\r\n      body,\r\n      subject: `New Comment`,\r\n    };\r\n    if (emailPayload?.to?.length > 0 && emailPayload?.from) await sendEmail(emailPayload);\r\n    for (const receiver of receivers) {\r\n      await createFeed({\r\n        message: `${createdBy?.name} just ${\r\n          comment.parentIds?.length > 1 ? 'replied to a comment' : 'commented on your response'\r\n        }`,\r\n        link: `${commentLink}`,\r\n        createdBy: comment?.createdBy?._id,\r\n        receiver: receiver?._id,\r\n      });\r\n    }\r\n  }\r\n};\r\n"]}