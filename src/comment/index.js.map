{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { DB } from '../utils/DB';\r\nimport { getCurrentUser } from '../utils/authentication';\r\nimport { AppSyncEvent } from '../utils/customTypes';\r\nimport { CommentModel, IComment } from './utils/commentModel';\r\nimport { LikeModel } from '../like/utils/likeModel';\r\n// import { sendCommentNotification } from './utils/commentNotification';\r\nimport { userPopulate } from '../utils/populate';\r\nimport { runInTransaction } from '../utils/runInTransaction';\r\nimport { sendCommentNotification } from './utils/commentNotification';\r\n\r\nexport const handler = async (event: AppSyncEvent): Promise<any> => {\r\n  try {\r\n    await DB();\r\n    const { fieldName } = event.info;\r\n    const { identity } = event;\r\n    let args = { ...event.arguments };\r\n\r\n    const user = await getCurrentUser(identity);\r\n\r\n    if (fieldName.toLocaleLowerCase().includes('create') && user?._id) {\r\n      args = { ...args, createdBy: user._id };\r\n    }\r\n\r\n    switch (fieldName) {\r\n      case 'getComment': {\r\n        return await CommentModel.findById(args._id).populate(userPopulate);\r\n      }\r\n      case 'getActionCounts': {\r\n        const commentCount = await CommentModel.countDocuments({\r\n          $or: [\r\n            {\r\n              threadId: args.threadId,\r\n            },\r\n            {\r\n              parentIds: { $elemMatch: { $eq: args.threadId } },\r\n            },\r\n          ],\r\n        });\r\n        const likeCount = await LikeModel.countDocuments({\r\n          threadId: args.threadId,\r\n        });\r\n        let likedByUser = false;\r\n        if (user?._id) {\r\n          const tempLike = await LikeModel.findOne({\r\n            threadId: args.threadId,\r\n            createdBy: user._id,\r\n          });\r\n          if (tempLike) {\r\n            likedByUser = true;\r\n          }\r\n        }\r\n        return { commentCount, likeCount, likedByUser };\r\n      }\r\n      case 'getCommentsByThreadId': {\r\n        const { page = 1, limit = 10, commentIds = [] } = args;\r\n        const filter = { threadId: args.threadId };\r\n        let data: IComment[] = [];\r\n        if (commentIds?.length > 0) {\r\n          data = await CommentModel.find({ ...filter, _id: { $in: commentIds } }).populate(\r\n            userPopulate,\r\n          );\r\n        }\r\n        const newLimit = limit - data?.length;\r\n        const newData = await CommentModel.find({ ...filter, _id: { $nin: commentIds } })\r\n          .populate(userPopulate)\r\n          .limit(newLimit * 1)\r\n          .skip((page - 1) * newLimit)\r\n          .sort('-createdAt');\r\n        data = [...data, ...newData];\r\n        const count = await CommentModel.countDocuments(filter);\r\n        return {\r\n          data,\r\n          count,\r\n        };\r\n      }\r\n      case 'createComment': {\r\n        // const callback = async (session, comment) => {\r\n        //   await sendCommentNotification(session, comment);\r\n        // };\r\n        const comment = await runInTransaction({\r\n          action: 'CREATE',\r\n          Model: CommentModel,\r\n          args,\r\n          populate: userPopulate,\r\n          user,\r\n        });\r\n        await sendCommentNotification(comment, args?.path);\r\n        return comment;\r\n      }\r\n      case 'updateComment': {\r\n        return await runInTransaction({\r\n          action: 'UPDATE',\r\n          Model: CommentModel,\r\n          args,\r\n          populate: userPopulate,\r\n          user,\r\n        });\r\n      }\r\n      case 'deleteComment': {\r\n        const callback = async (session, comment) => {\r\n          if (comment?._id) {\r\n            await CommentModel.deleteMany({\r\n              parentIds: { $elemMatch: { $eq: comment?._id } },\r\n            }).session(session);\r\n            await LikeModel.deleteMany({\r\n              threadId: comment?._id,\r\n            }).session(session);\r\n          }\r\n        };\r\n        await runInTransaction(\r\n          {\r\n            action: 'DELETE',\r\n            Model: CommentModel,\r\n            args,\r\n            user,\r\n          },\r\n          callback,\r\n        );\r\n        return args?._id;\r\n      }\r\n      default: {\r\n        throw new Error('Something went wrong! Please check your Query or Mutation');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    const error2 = error;\r\n    throw error2;\r\n  }\r\n};\r\n"]}