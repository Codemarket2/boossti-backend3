{"version":3,"file":"likeModel.js","sourceRoot":"","sources":["likeModel.ts"],"names":[],"mappings":";;;AAAA,qCAAqC;AAErC,2DAAwD;AAOxD,MAAM,UAAU,GAAG,IAAA,2BAAY,EAAC;IAC9B,IAAI,EAAE;QACJ,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,QAAQ,EAAE,IAAI;KACf;CACF,CAAC,CAAC;AAEH,UAAU,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;AAE9D,QAAA,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAQ,MAAM,EAAE,UAAU,CAAC,CAAC","sourcesContent":["import * as mongoose from 'mongoose';\r\nimport { ISchema } from '../../utils/customTypes';\r\nimport { extendSchema } from '../../utils/extendSchema';\r\n\r\ninterface ILike extends ISchema {\r\n  like: boolean;\r\n  threadId: string;\r\n}\r\n\r\nconst likeSchema = extendSchema({\r\n  like: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  threadId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    required: true,\r\n  },\r\n});\r\n\r\nlikeSchema.index({ like: 1, threadId: 1, createdBy: 1 }, { unique: true });\r\n\r\nexport const LikeModel = mongoose.model<ILike>('Like', likeSchema);\r\n"]}