{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { DB } from '../utils/DB';\r\nimport { getCurrentUser } from '../utils/authentication';\r\nimport { AppSyncEvent } from '../utils/customTypes';\r\nimport { LikeModel } from './utils/likeModel';\r\nimport { runInTransaction } from '../utils/runInTransaction';\r\nimport { userPopulate } from '../utils/populate';\r\n\r\nexport const handler = async (event: AppSyncEvent): Promise<any> => {\r\n  try {\r\n    await DB();\r\n    const { fieldName } = event.info;\r\n    const { identity } = event;\r\n    let args = { ...event.arguments };\r\n    const user = await getCurrentUser(identity);\r\n\r\n    if (fieldName.toLocaleLowerCase().includes('create') && user && user._id) {\r\n      args = { ...args, createdBy: user._id };\r\n    }\r\n\r\n    switch (fieldName) {\r\n      case 'createLike': {\r\n        return await runInTransaction({\r\n          action: 'CREATE',\r\n          Model: LikeModel,\r\n          args,\r\n          populate: userPopulate,\r\n          user,\r\n        });\r\n      }\r\n      case 'updateLike': {\r\n        return await runInTransaction({\r\n          action: 'UPDATE',\r\n          Model: LikeModel,\r\n          args,\r\n          populate: userPopulate,\r\n          user,\r\n        });\r\n      }\r\n      case 'getLike': {\r\n        return await LikeModel.findById(args._id).populate(userPopulate);\r\n      }\r\n      case 'getLikesByThreadId': {\r\n        const { page = 1, limit = 10 } = args;\r\n        const data = await LikeModel.find({\r\n          threadId: args.threadId,\r\n        })\r\n          .populate(userPopulate)\r\n          .limit(limit * 1)\r\n          .skip((page - 1) * limit);\r\n        const count = await LikeModel.countDocuments({\r\n          threadId: args.threadId,\r\n        });\r\n        return {\r\n          data,\r\n          count,\r\n        };\r\n      }\r\n      case 'deleteLike': {\r\n        const like = await LikeModel.findOne({ createdBy: user?._id, threadId: args?.threadId });\r\n        if (like?._id) {\r\n          await runInTransaction({\r\n            action: 'DELETE',\r\n            Model: LikeModel,\r\n            args: { _id: like?._id },\r\n            user,\r\n          });\r\n          return like._id;\r\n        }\r\n        return null;\r\n      }\r\n      default: {\r\n        throw new Error('Something went wrong! Please check your Query or Mutation');\r\n      }\r\n    }\r\n  } catch (error) {\r\n    const error2 = error;\r\n    throw error2;\r\n  }\r\n};\r\n"]}