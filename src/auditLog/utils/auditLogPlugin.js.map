{"version":3,"file":"auditLogPlugin.js","sourceRoot":"","sources":["auditLogPlugin.ts"],"names":[],"mappings":";;;AAGA,yCAA+F;AAExF,MAAM,cAAc,GAAG,UAAU,MAAM;IAC5C,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,IAAI;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,WAAW,GAAG,EAAE,IAAI;QAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;QACzC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC;QAC5B,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,IAAA,+BAAoB,EAAC,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC;SACnD;QACD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAK;QAClC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK;QACnC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzD,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC;QAC3C,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC;QAC9B,MAAM,IAAA,gCAAqB,EAAC;YAC1B,KAAK;YACL,UAAU;YACV,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC/B,OAAO,EAAE,MAAM,CAAC,QAAQ,EAAE;SAC3B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,KAAK;QAClC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK;QACnC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC;QAChD,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QACnC,MAAM,IAAA,+BAAoB,EAAC;YACzB,KAAK;YACL,UAAU;YACV,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AA9CW,QAAA,cAAc,kBA8CzB","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n// @ts-nocheck\r\nimport * as _ from 'lodash';\r\nimport { createActionAuditLog, updateAuctionAuditLog, deleteActionAuditLog } from './auditLog';\r\n\r\nexport const auditLogPlugin = function (schema) {\r\n  schema.pre('save', function (next) {\r\n    this.wasNew = this.isNew;\r\n    next();\r\n  });\r\n\r\n  schema.post('save', async function (doc, next) {\r\n    const model = this.constructor.modelName;\r\n    const documentId = this._id;\r\n    if (this.wasNew) {\r\n      await createActionAuditLog({ model, documentId });\r\n    }\r\n    next();\r\n  });\r\n\r\n  schema.pre('findOneAndUpdate', async function () {\r\n    const oldDoc = await this.model.findOne(this.getQuery());\r\n    this.oldDoc = oldDoc;\r\n  });\r\n\r\n  schema.post('findOneAndUpdate', async function () {\r\n    const newDoc = await this.model.findOne(this.getQuery());\r\n    const model = newDoc.constructor.modelName;\r\n    const documentId = newDoc._id;\r\n    await updateAuctionAuditLog({\r\n      model,\r\n      documentId,\r\n      oldData: this.oldDoc.toObject(),\r\n      newData: newDoc.toObject(),\r\n    });\r\n  });\r\n\r\n  schema.pre('findOneAndDelete', async function () {\r\n    const oldDoc = await this.model.findOne(this.getQuery());\r\n    this.oldDoc = oldDoc;\r\n  });\r\n\r\n  schema.post('findOneAndDelete', async function () {\r\n    const model = this.oldDoc.constructor.modelName;\r\n    const documentId = this.oldDoc._id;\r\n    await deleteActionAuditLog({\r\n      model,\r\n      documentId,\r\n      oldDoc: this.oldDoc,\r\n    });\r\n  });\r\n};\r\n"]}