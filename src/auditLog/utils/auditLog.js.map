{"version":3,"file":"auditLog.js","sourceRoot":"","sources":["auditLog.ts"],"names":[],"mappings":";;;AACA,mDAAgD;AAChD,4DAAyD;AAalD,MAAM,oBAAoB,GAAG,KAAK,EAAE,EACzC,KAAK,EACL,UAAU,EACV,OAAO,EACP,MAAM,EACN,SAAS,GACM,EAAE,EAAE;IACnB,MAAM,6BAAa,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7F,OAAO,EAAE,OAAO;KACjB,CAAC,CAAC;AACL,CAAC,CAAC;AAVW,QAAA,oBAAoB,wBAU/B;AAOK,MAAM,qBAAqB,GAAG,KAAK,EAAE,EAC1C,KAAK,EACL,UAAU,EACV,MAAM,EACN,MAAM,EACN,OAAO,EACP,SAAS,GACM,EAAE,EAAE;IACnB,MAAM,IAAI,GAAG,IAAA,iBAAO,EAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,EAAE,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,EAAE,CAAC,CAAC;IAC7D,MAAM,6BAAa,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE;QACrF,OAAO,EAAE,OAAO;KACjB,CAAC,CAAC;AACL,CAAC,CAAC;AAZW,QAAA,qBAAqB,yBAYhC;AAMK,MAAM,oBAAoB,GAAG,KAAK,EAAE,EACzC,KAAK,EACL,UAAU,EACV,MAAM,EACN,OAAO,EACP,SAAS,GACM,EAAE,EAAE;IACnB,MAAM,6BAAa,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE;QAC7F,OAAO,EAAE,OAAO;KACjB,CAAC,CAAC;AACL,CAAC,CAAC;AAVW,QAAA,oBAAoB,wBAU/B;AAEK,MAAM,WAAW,GAAG,KAAK,EAAE,UAAU,EAAE,EAAE;IAC9C,OAAO,MAAM,6BAAa,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACxE,CAAC,CAAC;AAFW,QAAA,WAAW,eAEtB","sourcesContent":["import { ClientSession } from 'mongoose';\r\nimport { AuditLogModel } from './auditLogModel';\r\nimport { getDiff } from '../../form/activityLog/getDiff';\r\n\r\ninterface IPayload {\r\n  documentId: string;\r\n  model: string;\r\n  session: ClientSession;\r\n  createdBy: ClientSession;\r\n}\r\n\r\ninterface ICreatePayload extends IPayload {\r\n  newDoc: any;\r\n}\r\n\r\nexport const createActionAuditLog = async ({\r\n  model,\r\n  documentId,\r\n  session,\r\n  newDoc,\r\n  createdBy,\r\n}: ICreatePayload) => {\r\n  await AuditLogModel.create([{ model, documentId, createdBy, action: 'CREATE', diff: newDoc }], {\r\n    session: session,\r\n  });\r\n};\r\n\r\ninterface IUpdatePayload extends IPayload {\r\n  oldDoc: any;\r\n  newDoc: any;\r\n}\r\n\r\nexport const updateAuctionAuditLog = async ({\r\n  model,\r\n  documentId,\r\n  oldDoc,\r\n  newDoc,\r\n  session,\r\n  createdBy,\r\n}: IUpdatePayload) => {\r\n  const diff = getDiff(oldDoc?.toObject(), newDoc?.toObject());\r\n  await AuditLogModel.create([{ model, documentId, createdBy, action: 'UPDATE', diff }], {\r\n    session: session,\r\n  });\r\n};\r\n\r\ninterface IDeletePayload extends IPayload {\r\n  oldDoc: any;\r\n}\r\n\r\nexport const deleteActionAuditLog = async ({\r\n  model,\r\n  documentId,\r\n  oldDoc,\r\n  session,\r\n  createdBy,\r\n}: IDeletePayload) => {\r\n  await AuditLogModel.create([{ model, documentId, createdBy, action: 'DELETE', diff: oldDoc }], {\r\n    session: session,\r\n  });\r\n};\r\n\r\nexport const getAuditLog = async (documentId) => {\r\n  return await AuditLogModel.findOne({ documentId }).sort('-createdAt');\r\n};\r\n"]}